{"meta":{"version":1,"warehouse":"4.0.1"},"models":{"Asset":[{"_id":"themes/butterfly/source/css/index.styl","path":"css/index.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/css/var.styl","path":"css/var.styl","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/main.js","path":"js/main.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/tw_cn.js","path":"js/tw_cn.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/utils.js","path":"js/utils.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/404.jpg","path":"img/404.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/avator.jpg","path":"img/avator.jpg","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.png","path":"img/favicon.png","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/favicon.ico","path":"img/favicon.ico","modified":1,"renderable":1},{"_id":"themes/butterfly/source/img/friend_404.gif","path":"img/friend_404.gif","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/algolia.js","path":"js/search/algolia.js","modified":1,"renderable":1},{"_id":"themes/butterfly/source/js/search/local-search.js","path":"js/search/local-search.js","modified":1,"renderable":1}],"Cache":[{"_id":"source/404/index.md","hash":"d8941d95ca8cfbefd576e208b21116cdb53fee86","modified":1651634569814},{"_id":"source/friends/index.md","hash":"c2cd21d715ce65cf645ece8fb7e79c792e86c1fa","modified":1651634516791},{"_id":"source/categories/index.md","hash":"97051392e4cb4d0e5e464d1e6892b09f76653b1e","modified":1651634462797},{"_id":"source/tags/index.md","hash":"63c8dd9e6beb3992b708bee2b03c1116d7c4c4cf","modified":1651634482818},{"_id":"source/about/index.md","hash":"a82f8f4eb4506d9059d0b353d17b4c0d4365c777","modified":1651634499813},{"_id":"source/_posts/JS/1.前言.md","hash":"842c3d680bb5471b26bd37db391feffca5c7f171","modified":1653186968653},{"_id":"source/_posts/JS/2.数据类型.md","hash":"c71c1f5009203e5f6216c687203804f9ddfd23b6","modified":1653211397359},{"_id":"source/_posts/JS/3.变量.md","hash":"7633be2454e7c56898bea1ce643a087344b2400c","modified":1653211680002},{"_id":"source/_posts/Game/饥荒种植巨大作物四季搭配表.md","hash":"d5e237c83c17888ec70bc49ad3c12c183d04ebb8","modified":1652663185576},{"_id":"source/_posts/TS/TypeScript介绍.md","hash":"c3ce94e0b66fc59e7a3eba813330a6723e22b92d","modified":1651926463939},{"_id":"source/_posts/TS/TypeScript配置文件.md","hash":"4047e5506dff94f5125ff7e39acc703e8d01842b","modified":1651927122245},{"_id":"source/_posts/TS/使用第三方库简化流程.md","hash":"b6dee656959af600f2d3ed7f6c531c480d128f23","modified":1652607246554},{"_id":"source/_posts/Life/typora使用图床.md","hash":"47463c08b923c98091281a716784d1e46e50f0de","modified":1651674980514},{"_id":"source/_posts/Life/wallpaper.md","hash":"eba8434cc3bf6bc293ee94bec625ccbecd2d9524","modified":1651925523710},{"_id":"source/_posts/problem/yarn/全局安装后命令不起作用.md","hash":"bf3bc2597d63e7cbdc27c14d7f2b6903af61a55b","modified":1652663483653},{"_id":"themes/butterfly/_config.yml","hash":"a06c8a50a49d14c8b53187239f4813a1463c6c64","modified":1651644580616},{"_id":"themes/butterfly/package.json","hash":"7b6e64a15e9db77d87c88beb369771acb13822ba","modified":1651643800680},{"_id":"themes/butterfly/.github/stale.yml","hash":"79b830939587a5c029b20db6615ba73907d60bb4","modified":1651643800602},{"_id":"themes/butterfly/languages/default.yml","hash":"335731ef259a3cec2499a2d5b050025ff4bdc608","modified":1651643800608},{"_id":"themes/butterfly/LICENSE","hash":"c8bc7df08db9dd3b39c2c2259a163a36cf2f6808","modified":1651643800604},{"_id":"themes/butterfly/languages/en.yml","hash":"a96ab1bbe74e99ca2e4d67da9d83f442eb9b73af","modified":1651643800609},{"_id":"themes/butterfly/README_CN.md","hash":"84fa5880f5358abe919eb295aad3cfd17b69b631","modified":1651643800605},{"_id":"themes/butterfly/languages/zh-CN.yml","hash":"4adf079fb0170e3a8de6ddbb0392d6d1120030c4","modified":1651643800610},{"_id":"themes/butterfly/README.md","hash":"2555c3e418157a0fda35d3deaf029f12e5a12f12","modified":1651643800604},{"_id":"themes/butterfly/languages/zh-TW.yml","hash":"dcb10d62249bb149af8ad78db3ee6e342c6d6be7","modified":1651643800611},{"_id":"themes/butterfly/layout/archive.pug","hash":"2d5bf4b1755f89898c579c18d601be83d2bc8ebd","modified":1651643800611},{"_id":"themes/butterfly/layout/category.pug","hash":"bf979aec88d78b644fc5d31518f8679ad7625792","modified":1651643800612},{"_id":"themes/butterfly/layout/index.pug","hash":"648dcbdb3d145a710de81c909e000e8664d2ac9c","modified":1651643800678},{"_id":"themes/butterfly/layout/page.pug","hash":"bf2d6c6d2d156777b55292e51be02b0b3acf0af8","modified":1651643800678},{"_id":"themes/butterfly/layout/tag.pug","hash":"4bb5efc6dabdf1626685bf6771aaa1467155ae86","modified":1651643800680},{"_id":"themes/butterfly/layout/post.pug","hash":"fdbb508b5e6dec30fb8753c5a7fdd494410c4fc0","modified":1651643800679},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/config.yml","hash":"d9ff4bad9c9664e12729c7a531169a05698a3fd1","modified":1651643800601},{"_id":"themes/butterfly/.github/workflows/publish.yml","hash":"e320b40c051bae1549156cd5ea4a51383cf78598","modified":1651643800603},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/feature_request.yml","hash":"6e0f9470b18bd37d4891282ac73d61676b040e8c","modified":1651643800602},{"_id":"themes/butterfly/layout/includes/404.pug","hash":"aace9ddff469de4226e47a52ede1c81e66d66d5c","modified":1651643800613},{"_id":"themes/butterfly/layout/includes/additional-js.pug","hash":"ddea99847fd41323f183cd0c9dae3174c586f5b3","modified":1651643800613},{"_id":"themes/butterfly/layout/includes/head.pug","hash":"343f3cb328eb27ef04c0a4bf7fab44b1be76100a","modified":1651643800615},{"_id":"themes/butterfly/layout/includes/footer.pug","hash":"8715948b93e7508b84d913be1969b28c6b067b9b","modified":1651643800614},{"_id":"themes/butterfly/layout/includes/layout.pug","hash":"4473ba26e06a782e91ed181d0ceb83f8745aad1f","modified":1651643800625},{"_id":"themes/butterfly/layout/includes/pagination.pug","hash":"bb1847f45e713cc88b1c0a97035ec01f0209c995","modified":1651643800631},{"_id":"themes/butterfly/source/css/index.styl","hash":"c7924868adcb046b46498626a9223c7a7b3f2e30","modified":1651643800729},{"_id":"themes/butterfly/layout/includes/rightside.pug","hash":"205562ec188bfba5686c51af77486550d0927df5","modified":1651643800633},{"_id":"themes/butterfly/.github/ISSUE_TEMPLATE/bug_report.yml","hash":"e1043b8f149371d5a4ab0f1306eabc2988bed071","modified":1651643800601},{"_id":"themes/butterfly/layout/includes/sidebar.pug","hash":"4f41fc46410e1e3018ff87e1d1a5c28be7258119","modified":1651643800634},{"_id":"themes/butterfly/source/css/var.styl","hash":"584ef7b18d5e677eb2e62f9b139097d3b714a993","modified":1651643800729},{"_id":"themes/butterfly/source/js/utils.js","hash":"fdb9e5b38f076953a2431b8f682388b030694b55","modified":1651643800737},{"_id":"themes/butterfly/source/js/main.js","hash":"a2c1c55b5b8ec9a83cf6242ebc9ea9be95e1f0c1","modified":1651643800734},{"_id":"themes/butterfly/scripts/events/404.js","hash":"f1d1c378356b776e9b2a8411e6dca88dc8c3245c","modified":1651643800682},{"_id":"themes/butterfly/source/img/avator.jpg","hash":"e0294e33630ba6902eee1914a8be89c797b10e3a","modified":1651652465167},{"_id":"themes/butterfly/scripts/events/config.js","hash":"2120b83830e0cbb3f307d15d6a2fec62dade1e0b","modified":1651643800682},{"_id":"themes/butterfly/source/js/tw_cn.js","hash":"4db1170be7a9360e2c5399d281b979da730df2a3","modified":1651643800736},{"_id":"themes/butterfly/source/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1651643800731},{"_id":"themes/butterfly/scripts/events/init.js","hash":"b321a97420082101a4d41e6e571db1a166475e06","modified":1651643800683},{"_id":"themes/butterfly/source/img/favicon.png","hash":"fcfb719bc950e623dfb6b53206e3472a692448ff","modified":1651570366427},{"_id":"themes/butterfly/scripts/events/stylus.js","hash":"218add7e9b39b6fb6e69921abb9e44891a6cc3ce","modified":1651643800684},{"_id":"themes/butterfly/scripts/events/welcome.js","hash":"b92cc4648cfe5fb28c58943727823d1178b73a4a","modified":1651643800685},{"_id":"themes/butterfly/scripts/filters/post_lazyload.js","hash":"5fd6c9659262dc8f61d87866d0417fd534292c88","modified":1651643800685},{"_id":"themes/butterfly/scripts/filters/random_cover.js","hash":"6c3b7d0874fa499800a4fd49894c481b05ec750c","modified":1651643800685},{"_id":"themes/butterfly/scripts/tag/button.js","hash":"44cca49ddc76921bb455465ef912cab46c993cef","modified":1651643800691},{"_id":"themes/butterfly/scripts/tag/gallery.js","hash":"6d4cd2393945a9316339351cab588265f5c18d73","modified":1651643800691},{"_id":"themes/butterfly/scripts/tag/flink.js","hash":"3ba7677969ff01fab06fc6713455ddc6861f0024","modified":1651643800691},{"_id":"themes/butterfly/scripts/tag/hide.js","hash":"e01a3967e5884881bab858b11635457df412de80","modified":1651643800693},{"_id":"themes/butterfly/scripts/tag/inlineImg.js","hash":"7641adb0d520c5ff29dd36fc1fb8617c52ecc9fb","modified":1651643800693},{"_id":"themes/butterfly/scripts/tag/label.js","hash":"551f1b8edc973bd8afc5cce2eae546f002fa84c3","modified":1651643800694},{"_id":"themes/butterfly/source/img/favicon.ico","hash":"24b980072ae3dfad5fc737f5c18923fa3e40c341","modified":1651652048526},{"_id":"themes/butterfly/scripts/tag/mermaid.js","hash":"fd683ccc090db3122d77c7ee73e8d35dc8735ee3","modified":1651643800694},{"_id":"themes/butterfly/scripts/tag/note.js","hash":"420ba8b11e7316b4c09eb301d39814bc9bae9f90","modified":1651643800694},{"_id":"themes/butterfly/scripts/tag/tabs.js","hash":"08ea00791bd4738952234cb5d8360e119df6f875","modified":1651643800695},{"_id":"themes/butterfly/scripts/tag/timeline.js","hash":"4c7056d3cd56f10bd209d2ba4d3cc2027aad1440","modified":1651643800695},{"_id":"themes/butterfly/scripts/helpers/aside_categories.js","hash":"376e1884ea764404c38b1e73b16de0358ece519e","modified":1651643800688},{"_id":"themes/butterfly/scripts/helpers/aside_archives.js","hash":"4f712b4ea383b59a3122683db1d54c04a79ccc5d","modified":1651643800687},{"_id":"themes/butterfly/scripts/helpers/page.js","hash":"384de3c04809ec5fa996e8aa0628f770cd4bff3e","modified":1651643800688},{"_id":"themes/butterfly/scripts/helpers/inject_head_js.js","hash":"c445140fa16f19bf5fb617fa735504e7799d4d42","modified":1651643800688},{"_id":"themes/butterfly/scripts/helpers/related_post.js","hash":"83bfb16ab8d440be04e1b1f889f6affa7ad65a67","modified":1651643800690},{"_id":"themes/butterfly/source/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1651643800733},{"_id":"themes/butterfly/layout/includes/head/analytics.pug","hash":"c1e45d4d0bd905ddcd2282de4fe89be92e67847d","modified":1651643800616},{"_id":"themes/butterfly/layout/includes/head/Open_Graph.pug","hash":"07380718ed3af19a7e64b30e8c13726fe5983947","modified":1651643800616},{"_id":"themes/butterfly/layout/includes/head/config_site.pug","hash":"bd5dd5452e28a4fe94c3241a758ec6f4fdb7a149","modified":1651643800617},{"_id":"themes/butterfly/layout/includes/head/config.pug","hash":"8a3f9e674b44e6a92d4df22baca65d9d30007dc3","modified":1651643800617},{"_id":"themes/butterfly/layout/includes/head/google_adsense.pug","hash":"f29123e603cbbcc6ce277d4e8f600ba67498077c","modified":1651643800618},{"_id":"themes/butterfly/layout/includes/head/noscript.pug","hash":"72efaa09ff60843567458bd54152e06f0cb2757e","modified":1651643800618},{"_id":"themes/butterfly/layout/includes/head/preconnect.pug","hash":"fc3e67e5ae4774d9e89964ba96beed28f34ee8f0","modified":1651643800619},{"_id":"themes/butterfly/layout/includes/head/pwa.pug","hash":"6dc2c9b85df9ab4f5b554305339fd80a90a6cf43","modified":1651643800619},{"_id":"themes/butterfly/layout/includes/head/site_verification.pug","hash":"5168caadc4cf541f5d6676a9c5e8ae47a948f9ad","modified":1651643800620},{"_id":"themes/butterfly/layout/includes/header/index.pug","hash":"3a2797d2744607ba6cdb5a02853851957c0f7e29","modified":1651643800621},{"_id":"themes/butterfly/layout/includes/header/menu_item.pug","hash":"ca8bcd90ad9467819330bfe7c02b76322754bccf","modified":1651643800622},{"_id":"themes/butterfly/layout/includes/header/nav.pug","hash":"a9e56b1c41bf327859b0a7bcb8e72b458bd851b2","modified":1651643800622},{"_id":"themes/butterfly/layout/includes/header/post-info.pug","hash":"711e92da2677c3a9e9f50babd4430929dba0f524","modified":1651643800623},{"_id":"themes/butterfly/layout/includes/header/social.pug","hash":"631ec7000fd4d6cfa2de118ee02ad8a42ffb34f5","modified":1651643800624},{"_id":"themes/butterfly/layout/includes/mixins/article-sort.pug","hash":"971038debf539333b1687b4a1d87cf4fc965a846","modified":1651643800627},{"_id":"themes/butterfly/layout/includes/mixins/post-ui.pug","hash":"9c8e65939d048a579ea08d063c0f98550376f536","modified":1651643800628},{"_id":"themes/butterfly/layout/includes/loading/loading-js.pug","hash":"2e1ab0c2ca59a1ff5a5ba9b6ef60f3e34af5430c","modified":1651643800626},{"_id":"themes/butterfly/layout/includes/loading/loading.pug","hash":"dd8e6813976be64e80eba6562b54e74527ab306d","modified":1651643800626},{"_id":"themes/butterfly/layout/includes/page/categories.pug","hash":"5276a8d2835e05bd535fedc9f593a0ce8c3e8437","modified":1651643800629},{"_id":"themes/butterfly/layout/includes/page/default-page.pug","hash":"e9459f122af7b733398578f9f0f8ab3c5e12a217","modified":1651652895270},{"_id":"themes/butterfly/layout/includes/page/flink.pug","hash":"e2eba0fcb8332cb333b2aff9c76664e40e2e1974","modified":1651643800630},{"_id":"themes/butterfly/layout/includes/post/post-copyright.pug","hash":"cc1f7ae8a7ce5445277215821092e712ec8cc296","modified":1651643800632},{"_id":"themes/butterfly/layout/includes/page/tags.pug","hash":"8f43fdeaf8cff4a35bab74b48c963786ca015620","modified":1651643800631},{"_id":"themes/butterfly/layout/includes/third-party/aplayer.pug","hash":"e939344fd389aeb11864ee697d5fd9b036d8325f","modified":1651643800635},{"_id":"themes/butterfly/layout/includes/post/reward.pug","hash":"594626a18b7efbf771232855dfbce143fb244bc6","modified":1651643800633},{"_id":"themes/butterfly/layout/includes/third-party/effect.pug","hash":"4e37535c63149708ecbedb262336014524ad8723","modified":1651643800654},{"_id":"themes/butterfly/layout/includes/third-party/pangu.pug","hash":"f0898509da70388b5c532f19e762756d74080200","modified":1651643800662},{"_id":"themes/butterfly/layout/includes/third-party/pjax.pug","hash":"a5e6f9a88fe146c2c42c38e79f85c42351e9346d","modified":1651643800663},{"_id":"themes/butterfly/layout/includes/third-party/prismjs.pug","hash":"08979afbfecb4476a5ae8e360947b92624d285b8","modified":1651643800664},{"_id":"themes/butterfly/layout/includes/third-party/subtitle.pug","hash":"7b5fea9e1c113cab4c75f9d31d8efebe70d82e7a","modified":1651643800669},{"_id":"themes/butterfly/layout/includes/widget/card_announcement.pug","hash":"21e019bdc3b1e796bb00976bb29af2d51f873624","modified":1651643800671},{"_id":"themes/butterfly/layout/includes/widget/card_ad.pug","hash":"a8312b527493dabbadbb1280760168d3bc909a3b","modified":1651643800670},{"_id":"themes/butterfly/layout/includes/widget/card_archives.pug","hash":"73d33b6930e7944187a4b3403daf25d27077a2dd","modified":1651643800671},{"_id":"themes/butterfly/layout/includes/widget/card_bottom_self.pug","hash":"1dba77d250eeebfb6e293d504352c7e9ea31980b","modified":1651643800673},{"_id":"themes/butterfly/layout/includes/widget/card_author.pug","hash":"08641633d38903351a7424baf9893d9038ba057d","modified":1651643800672},{"_id":"themes/butterfly/layout/includes/widget/card_categories.pug","hash":"66e383b4ef374951eb87dd1bf4cdb7a667193fb5","modified":1651643800673},{"_id":"themes/butterfly/layout/includes/widget/card_newest_comment.pug","hash":"c02b1779bd0ebca6749f195be096b6ca574bfa29","modified":1651643800673},{"_id":"themes/butterfly/layout/includes/widget/card_post_toc.pug","hash":"59d979702fa21d960443824198614d63aaf69662","modified":1651643800674},{"_id":"themes/butterfly/layout/includes/widget/card_tags.pug","hash":"9755cac8424dc578e9ec07dbcaa429fddbedd392","modified":1651643800675},{"_id":"themes/butterfly/layout/includes/widget/card_recent_post.pug","hash":"471b20e71a19db1f5115727082e5188200c49383","modified":1651643800675},{"_id":"themes/butterfly/layout/includes/widget/card_top_self.pug","hash":"7b5ae404a1205546b7de4be42291315cf918f2b3","modified":1651643800676},{"_id":"themes/butterfly/layout/includes/widget/index.pug","hash":"5e0e9e9b2cd3c256d52423e2278e790aa387a53a","modified":1651643800677},{"_id":"themes/butterfly/layout/includes/widget/card_webinfo.pug","hash":"62adef7998fb9bebc5891a49472cfea944a1bf7a","modified":1651643800676},{"_id":"themes/butterfly/source/css/_highlight/highlight.styl","hash":"a2aa5caf338ff5323b6ff0601ebcc09e710d8398","modified":1651643800700},{"_id":"themes/butterfly/source/css/_global/function.styl","hash":"f562648de515abc873609bfe9b9f799c8cf42b72","modified":1651643800697},{"_id":"themes/butterfly/source/css/_global/index.styl","hash":"b9d7d23dc8810542b8c8ffcbfbd3694318debcc6","modified":1651643800698},{"_id":"themes/butterfly/source/css/_highlight/theme.styl","hash":"3c178608406c31d768af355ef1d7326da37cc75f","modified":1651643800704},{"_id":"themes/butterfly/source/css/_layout/aside.styl","hash":"b224bed22ce063d0d74e1f135812e16fdba87bca","modified":1651643800705},{"_id":"themes/butterfly/source/css/_layout/chat.styl","hash":"f27ad7b5d781c98bcac5c12c2d70b69b830e0374","modified":1651643800705},{"_id":"themes/butterfly/source/css/_layout/footer.styl","hash":"e931ef81754a7b9d999fa23d134c620e68e75491","modified":1651643800707},{"_id":"themes/butterfly/source/css/_layout/head.styl","hash":"f3aac52defb3497079a313e8c63ac2f7ee24dfbe","modified":1651643800707},{"_id":"themes/butterfly/source/css/_layout/comments.styl","hash":"0abe05309a186682772a94e5e759b63f8028e61a","modified":1651643800706},{"_id":"themes/butterfly/source/css/_layout/loading.styl","hash":"844858ae87c7278996ce484c6b456db354c48764","modified":1651643800708},{"_id":"themes/butterfly/source/css/_layout/pagination.styl","hash":"bd099f7d3adef4b7edd24c0a25a07415b156e587","modified":1651643800709},{"_id":"themes/butterfly/source/css/_layout/post.styl","hash":"9f880a6fa91784a4d3e9ffb0d4607e8a74d4d929","modified":1651643800709},{"_id":"themes/butterfly/source/css/_layout/reward.styl","hash":"b5ba2c3339ad406ce611d12d3f8cc84f864fbc03","modified":1651643800710},{"_id":"themes/butterfly/source/css/_layout/relatedposts.styl","hash":"6dcf19c0933c8828a439f801b0f4b256447dec07","modified":1651643800710},{"_id":"themes/butterfly/source/css/_layout/sidebar.styl","hash":"7e9b65dcae7ac54e0183bc841fea0f4bd4d78e5c","modified":1651643800712},{"_id":"themes/butterfly/source/css/_layout/rightside.styl","hash":"1c1c585ba99cb4004956b5e98fc044260b456f99","modified":1651643800711},{"_id":"themes/butterfly/source/css/_layout/third-party.styl","hash":"e02b52bdd337c0ed3c9d3a507d1011403c38881d","modified":1651643800713},{"_id":"themes/butterfly/source/css/_mode/darkmode.styl","hash":"0bcd07ffbd2a86a1b24eaefabd7e278034b14ee2","modified":1651643800714},{"_id":"themes/butterfly/source/css/_page/404.styl","hash":"a7223a8fcc4fa7b81e552c9a2554be7df9de312e","modified":1651643800716},{"_id":"themes/butterfly/source/css/_mode/readmode.styl","hash":"1fed25162d7204480e9bcf476b3246e1717107ca","modified":1651643800715},{"_id":"themes/butterfly/source/css/_page/archives.styl","hash":"d72218cb5a6bfe048ae1c92009bd815a08a53d3a","modified":1651643800716},{"_id":"themes/butterfly/source/css/_page/categories.styl","hash":"68bc8cbea25dbb3cdc170f09f9b43ce130547717","modified":1651643800717},{"_id":"themes/butterfly/source/css/_page/flink.styl","hash":"ecc2b2e28c179eb9406fc2c6f00e141078249cdd","modified":1651643800718},{"_id":"themes/butterfly/source/css/_page/homepage.styl","hash":"c42b872df237726483d93d6124b8751d4f64cf86","modified":1651643800718},{"_id":"themes/butterfly/source/css/_search/algolia.styl","hash":"d1398399eb7f1cc004fbcefa18f56188cc8fec8c","modified":1651643800720},{"_id":"themes/butterfly/source/js/search/algolia.js","hash":"6e20ab5f90a0dd6eb6fdca58e69961bd2f16a632","modified":1651643800735},{"_id":"themes/butterfly/source/css/_page/common.styl","hash":"a714776e3d585369f2285b6bb4e1564539c58d8b","modified":1651643800717},{"_id":"themes/butterfly/source/css/_page/tags.styl","hash":"9e35f91847773b915c74a78b8aa66c7bdb950ad0","modified":1651643800719},{"_id":"themes/butterfly/source/css/_tags/button.styl","hash":"62da1de0d5b8453fcecbfacddb16985265638ba5","modified":1651643800722},{"_id":"themes/butterfly/source/css/_tags/hexo.styl","hash":"985b183db7b7bfd8f9bdb60494549fb7f850348b","modified":1651643800723},{"_id":"themes/butterfly/source/css/_search/index.styl","hash":"cced94e70b4b90130cfa215582be2adbf883efba","modified":1651643800721},{"_id":"themes/butterfly/source/css/_tags/gallery.styl","hash":"84c42716e833d2d1dd47195ea996803ffa0e58ec","modified":1651643800723},{"_id":"themes/butterfly/source/css/_search/local-search.styl","hash":"e81da0983691b6baa8bee7785680bbc9a0ba748f","modified":1651643800721},{"_id":"themes/butterfly/source/css/_tags/hide.styl","hash":"b7cf7753479fcf2fe07287ffdb0e568adbba4c18","modified":1651643800724},{"_id":"themes/butterfly/source/css/_tags/label.styl","hash":"2f83bd145b870d80d4b18b0ac603235229a5694e","modified":1651643800725},{"_id":"themes/butterfly/source/css/_tags/inlineImg.styl","hash":"5a873d01fabebcf7ddf7a6b1c2e2e5e2714097f4","modified":1651643800724},{"_id":"themes/butterfly/source/js/search/local-search.js","hash":"f72e002d56903a49c36174e77e42f88b8af8bd44","modified":1651643800735},{"_id":"themes/butterfly/source/css/_third-party/normalize.min.css","hash":"8549829fb7d3c21cd9e119884962e8c463a4a267","modified":1651643800728},{"_id":"themes/butterfly/source/css/_tags/note.styl","hash":"076cd87805207c9b5612ec9771f6994287f4c169","modified":1651643800725},{"_id":"themes/butterfly/source/css/_tags/tabs.styl","hash":"ec81ea316c82b83d6aee31e52f248d329559d5d3","modified":1651643800726},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/disqus.pug","hash":"f4d21dcbc3b00eed9b1f604e132c4c6811a0a059","modified":1651643800636},{"_id":"themes/butterfly/source/css/_tags/timeline.styl","hash":"07ea7134db7a66c87658116f089fb1a2a6906563","modified":1651643800727},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/fb.pug","hash":"4eebb2d94ca75809ef0cf32d70f13e9bf1e87091","modified":1651643800636},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/index.pug","hash":"a18415004d03c0a1783eccac522fbcb6ce0ea1f1","modified":1651643800637},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/twikoo.pug","hash":"2fb4df7ecf4c404f9dba848660ec9a2f7616acd3","modified":1651643800639},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/valine.pug","hash":"13741770ce1fbc86396e2a34741750f18014de68","modified":1651643800639},{"_id":"themes/butterfly/layout/includes/third-party/card-post-count/waline.pug","hash":"6e5ccc9ea4346c71ad4cbf1e9f1cb83bb45e6f27","modified":1651643800640},{"_id":"themes/butterfly/layout/includes/third-party/chat/chatra.pug","hash":"f3f6eaecbcf9352342e259f4a5a3ad7160f31fc9","modified":1651643800641},{"_id":"themes/butterfly/layout/includes/third-party/chat/crisp.pug","hash":"b741b5e942481d779a8a1fe94c45154a62a6b748","modified":1651643800641},{"_id":"themes/butterfly/layout/includes/third-party/chat/daovoice.pug","hash":"e5af55cdb87d1ffd3d8702bc77097159acf95b54","modified":1651643800642},{"_id":"themes/butterfly/layout/includes/third-party/chat/gitter.pug","hash":"794ce3911f17d354b7196deb8c36d191afac63fb","modified":1651643800643},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqus.pug","hash":"d5f81fd5443a1b09efb165b5f4447a35949d14ad","modified":1651643800645},{"_id":"themes/butterfly/layout/includes/third-party/chat/index.pug","hash":"bb467bb22f3d0775b33f9eacbfc086ecb7831e78","modified":1651643800643},{"_id":"themes/butterfly/layout/includes/third-party/chat/tidio.pug","hash":"cd7ab4a776be93eea96a6f6fd0a547977fbe1ea3","modified":1651643800644},{"_id":"themes/butterfly/layout/includes/third-party/comments/disqusjs.pug","hash":"5f921c64073f73ae1f2d80969f4d3905d91396ce","modified":1651643800645},{"_id":"themes/butterfly/layout/includes/third-party/comments/facebook_comments.pug","hash":"a222477bddba3c646ee9b8560442c2cb204adb11","modified":1651643800646},{"_id":"themes/butterfly/layout/includes/third-party/comments/giscus.pug","hash":"319463fc8ff993b798f2293b659b522ad7770cf0","modified":1651643800647},{"_id":"themes/butterfly/layout/includes/third-party/comments/gitalk.pug","hash":"3df2f59c9552a1f2e6f0d50c4ae97e72c5392b59","modified":1651643800647},{"_id":"themes/butterfly/layout/includes/third-party/comments/index.pug","hash":"414f876d28f8497d6d551363a89c5c69bf1533eb","modified":1651643800648},{"_id":"themes/butterfly/layout/includes/third-party/comments/js.pug","hash":"810e8ca2669433f649329859922aabbb30d76178","modified":1651643800649},{"_id":"themes/butterfly/layout/includes/third-party/comments/livere.pug","hash":"589f8503f264d4fda971c8daf2028f45c4f2867b","modified":1651643800650},{"_id":"themes/butterfly/layout/includes/third-party/comments/twikoo.pug","hash":"4dedd90365d3a3779c83f0a2572c29e6b2aad623","modified":1651643800650},{"_id":"themes/butterfly/layout/includes/third-party/comments/utterances.pug","hash":"d48d59ebf8c0142fb3c4592a0d35874f85e6fd4c","modified":1651643800651},{"_id":"themes/butterfly/layout/includes/third-party/math/index.pug","hash":"2afa4c21dd19890f47fb568cfb0d90efb676a253","modified":1651643800655},{"_id":"themes/butterfly/layout/includes/third-party/comments/waline.pug","hash":"e45152e4ebc3fb2462916be93f98d18f0574f2d3","modified":1651643800653},{"_id":"themes/butterfly/layout/includes/third-party/math/katex.pug","hash":"cd358595d04894d4d647b79b80d995abbc0f061b","modified":1651643800656},{"_id":"themes/butterfly/layout/includes/third-party/math/mathjax.pug","hash":"e435f8b55508c82b9151842375952f50ee012ff1","modified":1651643800656},{"_id":"themes/butterfly/layout/includes/third-party/math/mermaid.pug","hash":"a0b332b8666eafc07f1a5166cff92b3c926d4500","modified":1651643800657},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/disqus-comment.pug","hash":"cd1ce86441dc508e4c3dbf8b829046455ba8a6b4","modified":1651643800658},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/github-issues.pug","hash":"b2ede1f6b41026ebd233ac076a405889a6eec76b","modified":1651643800659},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/twikoo-comment.pug","hash":"fa83e2320b2c0f469341817eadc2603644df71ee","modified":1651643800660},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/valine.pug","hash":"33368c0b80e4c4e78f3c7ee9bec0fed70ad838ca","modified":1651643800661},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/index.pug","hash":"16cf05cf9649322da57e9b8d316573bb65f8d8d8","modified":1651643800660},{"_id":"themes/butterfly/layout/includes/third-party/comments/valine.pug","hash":"cba55cbbd0962bf84b8956195e686b0e158ed247","modified":1651643800652},{"_id":"themes/butterfly/layout/includes/third-party/newest-comments/waline.pug","hash":"63ef0b2a75cf26a94c5bcd885f3a1c144451b852","modified":1651643800662},{"_id":"themes/butterfly/layout/includes/third-party/share/add-this.pug","hash":"8b4034e53ca5bf85097f681a6e76a53ce685c205","modified":1651643800666},{"_id":"themes/butterfly/layout/includes/third-party/share/addtoany.pug","hash":"1f02a26730e5f36cc2dfec7ff4d5c93a099ed5ba","modified":1651643800667},{"_id":"themes/butterfly/layout/includes/third-party/share/index.pug","hash":"4898a09d8e67fb358ffd74b3a1f0014f555dd856","modified":1651643800668},{"_id":"themes/butterfly/layout/includes/third-party/share/share-js.pug","hash":"b45fc15c3ae7db3a0fbce0d6da74a72a95ca8a2b","modified":1651643800668},{"_id":"themes/butterfly/layout/includes/third-party/search/algolia.pug","hash":"af5d3d87b736598dafcf5871863596592cacdfe1","modified":1651643800664},{"_id":"themes/butterfly/layout/includes/third-party/search/index.pug","hash":"ff3727c3ec698ec61a28c55cbc8c8508f0efb0a0","modified":1651643800665},{"_id":"themes/butterfly/layout/includes/third-party/search/local-search.pug","hash":"3b5ef84744a1a8fec5a63554079008040d96f924","modified":1651643800666},{"_id":"themes/butterfly/source/css/_highlight/highlight/index.styl","hash":"fc702a4614d0562a381907b083f71ba63d301d86","modified":1651643800701},{"_id":"themes/butterfly/source/css/_highlight/highlight/diff.styl","hash":"6e77f1ca0cfb0db6b028f5c0238780e66d344f3d","modified":1651643800701},{"_id":"themes/butterfly/source/css/_highlight/prismjs/diff.styl","hash":"1309292f1c8c53d96cd7333507b106bcc24ca8fc","modified":1651643800702},{"_id":"themes/butterfly/source/css/_highlight/prismjs/index.styl","hash":"01ff9e77eb1bd454bec65a6ff5972c8e219bc708","modified":1651643800703},{"_id":"themes/butterfly/source/css/_highlight/prismjs/line-number.styl","hash":"0b8aea62d1550113e1fcc237fae1b03743190208","modified":1651643800703},{"_id":"public/404/index.html","hash":"a861a4f841b1c987a287a53db27366791a7db111","modified":1653211694624},{"_id":"public/categories/index.html","hash":"5df94fd48807579f4c4a5470e57975241a52442e","modified":1653211694624},{"_id":"public/friends/index.html","hash":"fcaeab81a26d71a0eb7fdd153c300b2acda5827d","modified":1653211694624},{"_id":"public/tags/index.html","hash":"7c213b8bd8bb5d2c2b8ad392e45af4785090eeb1","modified":1653211694624},{"_id":"public/about/index.html","hash":"f5c61e34bfd764fd0642ab54838715ba472c0a3a","modified":1653211694624},{"_id":"public/cl3h3k4850007zcwcg1p3bqhz/fc2710fe313e/index.html","hash":"6038d9af866b7e4274f08c1b0c9056c936874e8d","modified":1653211694624},{"_id":"public/cl3h3k4810003zcwc9mze5woc/bb6d5ecd540b/index.html","hash":"0a7c2d0629cb17aa995d691d2ff43174ad49ced6","modified":1653211694624},{"_id":"public/cl3h3k47x0001zcwcgqmbatin/ce84eb7de7be/index.html","hash":"b75d4926a788d43ae33a6d00afafb68f1c143cb6","modified":1653211694624},{"_id":"public/cl3h3k48r001kzcwcbe6ecyea/9bdb0f1892f1/index.html","hash":"f9592bd12e7e4be4b89c7c4d027929cac38e8d9a","modified":1653211694624},{"_id":"public/cl3h3k48c000gzcwch60pd8hx/3fc7b18a58c4/index.html","hash":"705d16fdd4ac7adb0a341c89d86289305b5e286b","modified":1653211694624},{"_id":"public/cl3h3k48b000fzcwc3nxfe8rt/1a59a90de1ff/index.html","hash":"2742fcadf7d0c7e451bc56c91b70f86c46741107","modified":1653211694624},{"_id":"public/cl3h3k489000bzcwc2yf7cyjd/c7e41b6582a2/index.html","hash":"c77b8fc2a0f0adaa4b1557a64858b6a31df011d5","modified":1653211694624},{"_id":"public/cl3h3k4870009zcwcciks4pdm/4e735382ff85/index.html","hash":"33fd482ec55b1fda6418ec3162fe81ee06249de0","modified":1653211694624},{"_id":"public/cl3h3k48e000mzcwcgor82wbm/95a98f2dc8d9/index.html","hash":"2c5e9ee5ab2d6a224df899512def91a12dc315d9","modified":1653211694624},{"_id":"public/cl3h3k48d000lzcwcgomkgmlc/7c9048ea706f/index.html","hash":"104f08c67c232b79330d99b88d772d03fa81a5cc","modified":1653211694624},{"_id":"public/archives/index.html","hash":"dcdb1d7462c5d33ed46e86569f9631e9d12eef49","modified":1653211694624},{"_id":"public/archives/2022/index.html","hash":"3d3e17528340f5639d95da2ac2cc6538cadfb581","modified":1653211694624},{"_id":"public/archives/2022/05/index.html","hash":"ec2a75f7c55314ab0525678570b120061190052b","modified":1653211694624},{"_id":"public/categories/JavaScript/index.html","hash":"5bdaa0a58c04e861466fbad8a4b675b82212d227","modified":1653211694624},{"_id":"public/categories/Game/index.html","hash":"f04b74e0b14f931b0dd421ee8903fae167b3246b","modified":1653211694624},{"_id":"public/categories/前端/index.html","hash":"360d688ca14bf4d24e50ebb131b1f791e3491395","modified":1653211694624},{"_id":"public/categories/Game/饥荒/index.html","hash":"7a242f92b3d8f594c32eea449f2eca71cbefc8e1","modified":1653211694624},{"_id":"public/categories/前端/TypeScript/index.html","hash":"7498ceb9e47736180542babd9ccbe0acd4c16b9e","modified":1653211694624},{"_id":"public/categories/problem/index.html","hash":"1fe6ac3354905d07fabe38626f75f891882eec9e","modified":1653211694624},{"_id":"public/categories/problem/yarnd/index.html","hash":"c9a5f2f0f4eb342fd119cc221cf634fb4d4af196","modified":1653211694624},{"_id":"public/index.html","hash":"d5a43d2c2f0a3e198326af5629fbbcdaac56544d","modified":1653211694624},{"_id":"public/tags/JavaScript/index.html","hash":"59bea06132770a4493cb3374d5abc6b717b1ba38","modified":1653211694624},{"_id":"public/tags/Game/index.html","hash":"ebad193047c3912b282fb67256fa843d02dde135","modified":1653211694624},{"_id":"public/tags/饥荒/index.html","hash":"afb31da68e69fcf827b7a59106dd97b001f993b9","modified":1653211694624},{"_id":"public/tags/TypeScript/index.html","hash":"4073209b7930bf19fe506ab52d41c0a0815bb9a2","modified":1653211694624},{"_id":"public/tags/typora/index.html","hash":"3e06e678b77cef36bda68259b1c46566da79a8cd","modified":1653211694624},{"_id":"public/tags/wallpaper/index.html","hash":"3e4cec9eb2247594f375285ccd25dd0b04f9f3d1","modified":1653211694624},{"_id":"public/tags/yarn/index.html","hash":"747adefc0be6645da873a8d5785595aff27ef5b8","modified":1653211694624},{"_id":"public/tags/problem/index.html","hash":"92aff1d73d57eb6d5174b671824811cd79f2b21a","modified":1653211694624},{"_id":"public/img/404.jpg","hash":"fb4489bc1d30c93d28f7332158c1c6c1416148de","modified":1653211694624},{"_id":"public/img/avator.jpg","hash":"e0294e33630ba6902eee1914a8be89c797b10e3a","modified":1653211694624},{"_id":"public/img/favicon.png","hash":"fcfb719bc950e623dfb6b53206e3472a692448ff","modified":1653211694624},{"_id":"public/img/favicon.ico","hash":"24b980072ae3dfad5fc737f5c18923fa3e40c341","modified":1653211694624},{"_id":"public/img/friend_404.gif","hash":"8d2d0ebef70a8eb07329f57e645889b0e420fa48","modified":1653211694624},{"_id":"public/css/var.css","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1653211694624},{"_id":"public/js/utils.js","hash":"0b95daada72abb5d64a1e3236049a60120e47cca","modified":1653211694624},{"_id":"public/js/search/algolia.js","hash":"ce8131b712dca80f289015aef75f86e727f62981","modified":1653211694624},{"_id":"public/js/search/local-search.js","hash":"3071a4208fdf89ad7e0031536dd6ffa7bc951e4d","modified":1653211694624},{"_id":"public/css/index.css","hash":"f2c53001d8c807ad139c68ae9567514d01ed4f1e","modified":1653211694624},{"_id":"public/js/main.js","hash":"04efcbd28b37875cfec88eb87cab7256a9ebb327","modified":1653211694624},{"_id":"public/js/tw_cn.js","hash":"00053ce73210274b3679f42607edef1206eebc68","modified":1653211694624}],"Category":[{"name":"JavaScript","_id":"cl3h3k4830004zcwceb5ma1up"},{"name":"Game","_id":"cl3h3k48f000nzcwc1wto8vmd"},{"name":"前端","_id":"cl3h3k48g000szcwchvl2fen6"},{"name":"饥荒","parent":"cl3h3k48f000nzcwc1wto8vmd","_id":"cl3h3k48j0011zcwc0wumafgz"},{"name":"TypeScript","parent":"cl3h3k48g000szcwchvl2fen6","_id":"cl3h3k48k0014zcwcbmsy1mzo"},{"name":"problem","_id":"cl3h3k48s001lzcwc6ieherag"},{"name":"yarnd","parent":"cl3h3k48s001lzcwc6ieherag","_id":"cl3h3k48s001ozcwc31v96njr"}],"Data":[],"Page":[{"title":"404","date":"2018-09-30T09:25:30.000Z","type":"404","layout":"404","description":"Oops～，我崩溃了！找不到你想要的页面 :(","_content":"","source":"404/index.md","raw":"---\ntitle: 404\ndate: 2018-09-30 17:25:30\ntype: \"404\"\nlayout: \"404\"\ndescription: \"Oops～，我崩溃了！找不到你想要的页面 :(\"\n---","updated":"2022-05-04T03:22:49.814Z","path":"404/index.html","comments":1,"_id":"cl3h3k47v0000zcwcc798dcwg","content":"","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-2ew3pm.jpg","excerpt":"","more":""},{"title":"categories","date":"2022-05-04T03:20:45.000Z","type":"categories","layout":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-05-04 11:20:45\ntype: \"categories\"\nlayout: \"categories\"\n---\n","updated":"2022-05-04T03:21:02.797Z","path":"categories/index.html","comments":1,"_id":"cl3h3k4800002zcwcbhaegidl","content":"","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-2ew3pm.jpg","excerpt":"","more":""},{"title":"friends","date":"2022-05-04T03:21:48.000Z","type":"friends","layout":"friends","_content":"","source":"friends/index.md","raw":"---\ntitle: friends\ndate: 2022-05-04 11:21:48\ntype: \"friends\"\nlayout: \"friends\"\n---\n","updated":"2022-05-04T03:21:56.791Z","path":"friends/index.html","comments":1,"_id":"cl3h3k4850006zcwc093ncz6k","content":"","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-2e7v1g.png","excerpt":"","more":""},{"title":"tags","date":"2022-05-04T03:21:14.000Z","type":"tags","layout":"tags","_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2022-05-04 11:21:14\ntype: \"tags\"\nlayout: \"tags\"\n---\n","updated":"2022-05-04T03:21:22.818Z","path":"tags/index.html","comments":1,"_id":"cl3h3k4860008zcwcfsxyh2lg","content":"","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-015er3.jpg","excerpt":"","more":""},{"title":"about","date":"2022-05-04T03:21:30.000Z","type":"about","layout":"about","_content":"","source":"about/index.md","raw":"---\ntitle: about\ndate: 2022-05-04 11:21:30\ntype: \"about\"\nlayout: \"about\"\n---\n","updated":"2022-05-04T03:21:39.813Z","path":"about/index.html","comments":1,"_id":"cl3h3k488000azcwc35t66ul0","content":"","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-4l5j3r.jpg","excerpt":"","more":""}],"Post":[{"title":"前言","date":"2022-05-22T02:19:28.000Z","_content":"\n# 前言\n\n时间如白驹过隙，不知不觉间，已经有一年的工作经验了，遥想去年，刚从学校出来时，心怀一腔热血与对生活的不屑，总觉得工作是一件很简单的事情。后来，在一次一次的面试失败中，我逐渐认识到，原来生活并非表面上的那么轻松，最后凭着我在学校课余时间自学的一些前端基础，我到了现在的公司。从实习到转正再到现在，已经有一年多得工作经验，在这段时间里确实学到了很多很多的东西，但还差的很远很远。\n\n回首走过的路，我虽然学到了很多东西，但也忘记了很多的东西，所以决定将`JavaScript`复习一遍，整理一下笔记。生活虽然很苦😫，但我们可以很甜😀~加油，打工人💪！\n","source":"_posts/JS/1.前言.md","raw":"---\ntitle: 前言\ndate: 2022-05-22 10:19:28\ntags: JavaScript\ncategories:\n - JavaScript\n---\n\n# 前言\n\n时间如白驹过隙，不知不觉间，已经有一年的工作经验了，遥想去年，刚从学校出来时，心怀一腔热血与对生活的不屑，总觉得工作是一件很简单的事情。后来，在一次一次的面试失败中，我逐渐认识到，原来生活并非表面上的那么轻松，最后凭着我在学校课余时间自学的一些前端基础，我到了现在的公司。从实习到转正再到现在，已经有一年多得工作经验，在这段时间里确实学到了很多很多的东西，但还差的很远很远。\n\n回首走过的路，我虽然学到了很多东西，但也忘记了很多的东西，所以决定将`JavaScript`复习一遍，整理一下笔记。生活虽然很苦😫，但我们可以很甜😀~加油，打工人💪！\n","slug":"JS/1.前言","published":1,"updated":"2022-05-22T02:36:08.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3h3k47x0001zcwcgqmbatin","content":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>时间如白驹过隙，不知不觉间，已经有一年的工作经验了，遥想去年，刚从学校出来时，心怀一腔热血与对生活的不屑，总觉得工作是一件很简单的事情。后来，在一次一次的面试失败中，我逐渐认识到，原来生活并非表面上的那么轻松，最后凭着我在学校课余时间自学的一些前端基础，我到了现在的公司。从实习到转正再到现在，已经有一年多得工作经验，在这段时间里确实学到了很多很多的东西，但还差的很远很远。</p>\n<p>回首走过的路，我虽然学到了很多东西，但也忘记了很多的东西，所以决定将<code>JavaScript</code>复习一遍，整理一下笔记。生活虽然很苦😫，但我们可以很甜😀~加油，打工人💪！</p>\n","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-015er3.jpg","excerpt":"","more":"<h1 id=\"前言\"><a href=\"#前言\" class=\"headerlink\" title=\"前言\"></a>前言</h1><p>时间如白驹过隙，不知不觉间，已经有一年的工作经验了，遥想去年，刚从学校出来时，心怀一腔热血与对生活的不屑，总觉得工作是一件很简单的事情。后来，在一次一次的面试失败中，我逐渐认识到，原来生活并非表面上的那么轻松，最后凭着我在学校课余时间自学的一些前端基础，我到了现在的公司。从实习到转正再到现在，已经有一年多得工作经验，在这段时间里确实学到了很多很多的东西，但还差的很远很远。</p>\n<p>回首走过的路，我虽然学到了很多东西，但也忘记了很多的东西，所以决定将<code>JavaScript</code>复习一遍，整理一下笔记。生活虽然很苦😫，但我们可以很甜😀~加油，打工人💪！</p>\n"},{"title":"数据类型","date":"2022-05-22T02:37:49.000Z","_content":"\n# 数据类型\n\n\n\n## 原始类型（基本类型）\n\n原始类型指不可再细分的类型，存放的是**具体的值**\n\n### number【数字类型】\n\n就是直接写一串数字，emmmmmm.....感觉说了一句废话~\n\n> 了解：\n>\n> 数字类型可以加上前缀来表示不同的进制\n>\n> 0：表示8进制\n>\n> 0x：表示16进制\n>\n> 0b：表示2进制\n\n### string【字符串类型】\n\n使用单引号（'）、双引号（\"）、反引号（`）【tab键上面的那个键】包裹的内容即为字符串类型\n\n> 在字符串中，特殊符号可以使用转义符（/）来进行转义\n\n### boolean【布尔类型】\n\n只有2种情况，`true`、`false`，表示真或假\n\n### undefined\n\n表示未定义，只有一种书写情况即`undefined`\n\n### null\n\n表示空，不存在\n\n### Symbol【符号类型】\n\n具有永不相等的特性，为ES6新增，具体在ES6中详解\n\n### Bigint\n\n支持更大范围的整数类型，为ES2020新增\n\n## 引用类型\n\n存放的是**内存地址**\n\n### object【对象类型】\n\n可以认为对象是由多个基本类型组合而成的\n\n```js\nvar user = {\n\tname: \"mikeahhui\",\n\tsex: \"man\",\n\tage: 18,\n\thaveGirlFriend: false,\n\n}\n```\n\n### function【函数】\n\n之后详解\n\n### 得到数据的类型\n\n使用`typeof`\n\n```\nconsole.log(typeof '嘿嘿'); // string\nconsole.log(typeof(123)); // number\n```\n\n## JS中的垃圾回收机制\n\n垃圾回收器，会定期的发现内存中无法访问的对象，该对象称为垃圾，垃圾回收器会自动在合适的时间将占用内存的内存释放掉\n","source":"_posts/JS/2.数据类型.md","raw":"---\ntitle: 数据类型\ndate: 2022-05-22 10:37:49\ntags: JavaScript\ncategories:\n - JavaScript\n---\n\n# 数据类型\n\n\n\n## 原始类型（基本类型）\n\n原始类型指不可再细分的类型，存放的是**具体的值**\n\n### number【数字类型】\n\n就是直接写一串数字，emmmmmm.....感觉说了一句废话~\n\n> 了解：\n>\n> 数字类型可以加上前缀来表示不同的进制\n>\n> 0：表示8进制\n>\n> 0x：表示16进制\n>\n> 0b：表示2进制\n\n### string【字符串类型】\n\n使用单引号（'）、双引号（\"）、反引号（`）【tab键上面的那个键】包裹的内容即为字符串类型\n\n> 在字符串中，特殊符号可以使用转义符（/）来进行转义\n\n### boolean【布尔类型】\n\n只有2种情况，`true`、`false`，表示真或假\n\n### undefined\n\n表示未定义，只有一种书写情况即`undefined`\n\n### null\n\n表示空，不存在\n\n### Symbol【符号类型】\n\n具有永不相等的特性，为ES6新增，具体在ES6中详解\n\n### Bigint\n\n支持更大范围的整数类型，为ES2020新增\n\n## 引用类型\n\n存放的是**内存地址**\n\n### object【对象类型】\n\n可以认为对象是由多个基本类型组合而成的\n\n```js\nvar user = {\n\tname: \"mikeahhui\",\n\tsex: \"man\",\n\tage: 18,\n\thaveGirlFriend: false,\n\n}\n```\n\n### function【函数】\n\n之后详解\n\n### 得到数据的类型\n\n使用`typeof`\n\n```\nconsole.log(typeof '嘿嘿'); // string\nconsole.log(typeof(123)); // number\n```\n\n## JS中的垃圾回收机制\n\n垃圾回收器，会定期的发现内存中无法访问的对象，该对象称为垃圾，垃圾回收器会自动在合适的时间将占用内存的内存释放掉\n","slug":"JS/2.数据类型","published":1,"updated":"2022-05-22T09:23:17.359Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3h3k4810003zcwc9mze5woc","content":"<h1 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h1><h2 id=\"原始类型（基本类型）\"><a href=\"#原始类型（基本类型）\" class=\"headerlink\" title=\"原始类型（基本类型）\"></a>原始类型（基本类型）</h2><p>原始类型指不可再细分的类型，存放的是<strong>具体的值</strong></p>\n<h3 id=\"number【数字类型】\"><a href=\"#number【数字类型】\" class=\"headerlink\" title=\"number【数字类型】\"></a>number【数字类型】</h3><p>就是直接写一串数字，emmmmmm…..感觉说了一句废话~</p>\n<blockquote>\n<p>了解：</p>\n<p>数字类型可以加上前缀来表示不同的进制</p>\n<p>0：表示8进制</p>\n<p>0x：表示16进制</p>\n<p>0b：表示2进制</p>\n</blockquote>\n<h3 id=\"string【字符串类型】\"><a href=\"#string【字符串类型】\" class=\"headerlink\" title=\"string【字符串类型】\"></a>string【字符串类型】</h3><p>使用单引号（’）、双引号（”）、反引号（`）【tab键上面的那个键】包裹的内容即为字符串类型</p>\n<blockquote>\n<p>在字符串中，特殊符号可以使用转义符（/）来进行转义</p>\n</blockquote>\n<h3 id=\"boolean【布尔类型】\"><a href=\"#boolean【布尔类型】\" class=\"headerlink\" title=\"boolean【布尔类型】\"></a>boolean【布尔类型】</h3><p>只有2种情况，<code>true</code>、<code>false</code>，表示真或假</p>\n<h3 id=\"undefined\"><a href=\"#undefined\" class=\"headerlink\" title=\"undefined\"></a>undefined</h3><p>表示未定义，只有一种书写情况即<code>undefined</code></p>\n<h3 id=\"null\"><a href=\"#null\" class=\"headerlink\" title=\"null\"></a>null</h3><p>表示空，不存在</p>\n<h3 id=\"Symbol【符号类型】\"><a href=\"#Symbol【符号类型】\" class=\"headerlink\" title=\"Symbol【符号类型】\"></a>Symbol【符号类型】</h3><p>具有永不相等的特性，为ES6新增，具体在ES6中详解</p>\n<h3 id=\"Bigint\"><a href=\"#Bigint\" class=\"headerlink\" title=\"Bigint\"></a>Bigint</h3><p>支持更大范围的整数类型，为ES2020新增</p>\n<h2 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h2><p>存放的是<strong>内存地址</strong></p>\n<h3 id=\"object【对象类型】\"><a href=\"#object【对象类型】\" class=\"headerlink\" title=\"object【对象类型】\"></a>object【对象类型】</h3><p>可以认为对象是由多个基本类型组合而成的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> user = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">name</span>: <span class=\"string\">&quot;mikeahhui&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">sex</span>: <span class=\"string\">&quot;man&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">age</span>: <span class=\"number\">18</span>,</span><br><span class=\"line\">\t<span class=\"attr\">haveGirlFriend</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"function【函数】\"><a href=\"#function【函数】\" class=\"headerlink\" title=\"function【函数】\"></a>function【函数】</h3><p>之后详解</p>\n<h3 id=\"得到数据的类型\"><a href=\"#得到数据的类型\" class=\"headerlink\" title=\"得到数据的类型\"></a>得到数据的类型</h3><p>使用<code>typeof</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(typeof &#x27;嘿嘿&#x27;); // string</span><br><span class=\"line\">console.log(typeof(123)); // number</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JS中的垃圾回收机制\"><a href=\"#JS中的垃圾回收机制\" class=\"headerlink\" title=\"JS中的垃圾回收机制\"></a>JS中的垃圾回收机制</h2><p>垃圾回收器，会定期的发现内存中无法访问的对象，该对象称为垃圾，垃圾回收器会自动在合适的时间将占用内存的内存释放掉</p>\n","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-48y7wy.jpg","excerpt":"","more":"<h1 id=\"数据类型\"><a href=\"#数据类型\" class=\"headerlink\" title=\"数据类型\"></a>数据类型</h1><h2 id=\"原始类型（基本类型）\"><a href=\"#原始类型（基本类型）\" class=\"headerlink\" title=\"原始类型（基本类型）\"></a>原始类型（基本类型）</h2><p>原始类型指不可再细分的类型，存放的是<strong>具体的值</strong></p>\n<h3 id=\"number【数字类型】\"><a href=\"#number【数字类型】\" class=\"headerlink\" title=\"number【数字类型】\"></a>number【数字类型】</h3><p>就是直接写一串数字，emmmmmm…..感觉说了一句废话~</p>\n<blockquote>\n<p>了解：</p>\n<p>数字类型可以加上前缀来表示不同的进制</p>\n<p>0：表示8进制</p>\n<p>0x：表示16进制</p>\n<p>0b：表示2进制</p>\n</blockquote>\n<h3 id=\"string【字符串类型】\"><a href=\"#string【字符串类型】\" class=\"headerlink\" title=\"string【字符串类型】\"></a>string【字符串类型】</h3><p>使用单引号（’）、双引号（”）、反引号（`）【tab键上面的那个键】包裹的内容即为字符串类型</p>\n<blockquote>\n<p>在字符串中，特殊符号可以使用转义符（/）来进行转义</p>\n</blockquote>\n<h3 id=\"boolean【布尔类型】\"><a href=\"#boolean【布尔类型】\" class=\"headerlink\" title=\"boolean【布尔类型】\"></a>boolean【布尔类型】</h3><p>只有2种情况，<code>true</code>、<code>false</code>，表示真或假</p>\n<h3 id=\"undefined\"><a href=\"#undefined\" class=\"headerlink\" title=\"undefined\"></a>undefined</h3><p>表示未定义，只有一种书写情况即<code>undefined</code></p>\n<h3 id=\"null\"><a href=\"#null\" class=\"headerlink\" title=\"null\"></a>null</h3><p>表示空，不存在</p>\n<h3 id=\"Symbol【符号类型】\"><a href=\"#Symbol【符号类型】\" class=\"headerlink\" title=\"Symbol【符号类型】\"></a>Symbol【符号类型】</h3><p>具有永不相等的特性，为ES6新增，具体在ES6中详解</p>\n<h3 id=\"Bigint\"><a href=\"#Bigint\" class=\"headerlink\" title=\"Bigint\"></a>Bigint</h3><p>支持更大范围的整数类型，为ES2020新增</p>\n<h2 id=\"引用类型\"><a href=\"#引用类型\" class=\"headerlink\" title=\"引用类型\"></a>引用类型</h2><p>存放的是<strong>内存地址</strong></p>\n<h3 id=\"object【对象类型】\"><a href=\"#object【对象类型】\" class=\"headerlink\" title=\"object【对象类型】\"></a>object【对象类型】</h3><p>可以认为对象是由多个基本类型组合而成的</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> user = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">name</span>: <span class=\"string\">&quot;mikeahhui&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">sex</span>: <span class=\"string\">&quot;man&quot;</span>,</span><br><span class=\"line\">\t<span class=\"attr\">age</span>: <span class=\"number\">18</span>,</span><br><span class=\"line\">\t<span class=\"attr\">haveGirlFriend</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"function【函数】\"><a href=\"#function【函数】\" class=\"headerlink\" title=\"function【函数】\"></a>function【函数】</h3><p>之后详解</p>\n<h3 id=\"得到数据的类型\"><a href=\"#得到数据的类型\" class=\"headerlink\" title=\"得到数据的类型\"></a>得到数据的类型</h3><p>使用<code>typeof</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">console.log(typeof &#x27;嘿嘿&#x27;); // string</span><br><span class=\"line\">console.log(typeof(123)); // number</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"JS中的垃圾回收机制\"><a href=\"#JS中的垃圾回收机制\" class=\"headerlink\" title=\"JS中的垃圾回收机制\"></a>JS中的垃圾回收机制</h2><p>垃圾回收器，会定期的发现内存中无法访问的对象，该对象称为垃圾，垃圾回收器会自动在合适的时间将占用内存的内存释放掉</p>\n"},{"title":"变量","date":"2022-05-22T08:05:45.000Z","_content":"\n# 变量\n\n## 什么是变量？\n\n变量是一块内存空间，用于保存数据\n\n## 使用变量\n\n1. 声明（定义）变量\n\n```js\n// var 变量名;\nvar user;\nuser = 'xx';\n```\n\n**变量声明后若未赋值则值为`undefined`**\n\n2. 变量的赋值\n\n向变量的内存空间存放数据\n\n- 变量的值是可变的\n\n变量可以被重新赋值，新的值会覆盖原来的值\n\n- 变量的名称\n\nemmmmmmmmmm....没啥好说的，懂得都懂，就一句话，将变量命名为a、b、c...的都是\"小可爱\"!😛\n\n- 声明和赋值\n\n可以在声明的时候直接给变量赋值\n\n```js\nvar user = 'xx';  // 与先声明再赋值没有任何区别，只是一种语法糖，方便书写而已~\n```\n\n> 值得注意的地方：\n>\n> - **任何可以书写数据的地方，都可以书写变量**\n>\n> - 若使用一个未声明的变量，会导致报错\n>\n> - **Js中存在变量提升**\n>\n>   所有变量的声明，会自动提到代码的最顶端\n>\n>   这种提升不会超越脚本块\n>\n> - 允许定义多个同名变量（这么做的都是”小可爱“）\n>\n>   多个同名变量最终会提升未一个，后面的覆盖前面的\n\n## 在变量中存放对象\n\n### 通过变量读取对象中的某个属性\n\n```js\n// 变量名.属性名\nuser.naem;\n```\n\n- 当读取的属性不存在时，会得到`undefined`，程序不会报错\n- 当读取属性的对象不存时，程序报错\n\n### 通过变量更改对象中的某个属性\n\n```js\nvar user = {\n\tname: \"yyy\",\n}\nuser.name = 'xxx';\n```\n\n**放赋值的属性不存在时，会添加属性**\n\n### 删除属性\n\n```js\n// delete 变量名.属性名\ndelete user.name;\n```\n\n### 属性表达式\n\n给属性赋值或读取属性时，可以使用下面的格式操作\n\n```js\n// 对象变量[\"属性名\"];\nuser[\"name\"];\n```\n\n以`.`调用的任何情况属性表达式都可以代替，但是`.`调用却做不到一些属性表达式的能做到的事\n\n```js\nuser[\"?\"];\nfunction getUserProp(prop) {\n\treturn user[prop];\n};\n```\n\n**属性的名字只能是字符串，如果写的是数字，则会自动转换为字符串类型的数字**\n\n### 全局对象\n\nJs大部分宿主环境都会提供一个特殊的对象，该对象可以直接在Js代码中访问，该对象叫做全局对象\n\n在浏览器环境中，全局对象为`window`，表示整个窗口\n\n全局对象中的所有属性，可以直接使用，而不需要协商全局对象名（window可以省略）\n\n**开发者定义的变量实际上会成为`window`对象的属性**\n\n**如果变量没有被赋值，则该变量不会覆盖`window`对象上的同名属性**\n","source":"_posts/JS/3.变量.md","raw":"---\ntitle: 变量\ndate: 2022-05-22 16:05:45\ntags: JavaScript\ncategories:\n - JavaScript\n---\n\n# 变量\n\n## 什么是变量？\n\n变量是一块内存空间，用于保存数据\n\n## 使用变量\n\n1. 声明（定义）变量\n\n```js\n// var 变量名;\nvar user;\nuser = 'xx';\n```\n\n**变量声明后若未赋值则值为`undefined`**\n\n2. 变量的赋值\n\n向变量的内存空间存放数据\n\n- 变量的值是可变的\n\n变量可以被重新赋值，新的值会覆盖原来的值\n\n- 变量的名称\n\nemmmmmmmmmm....没啥好说的，懂得都懂，就一句话，将变量命名为a、b、c...的都是\"小可爱\"!😛\n\n- 声明和赋值\n\n可以在声明的时候直接给变量赋值\n\n```js\nvar user = 'xx';  // 与先声明再赋值没有任何区别，只是一种语法糖，方便书写而已~\n```\n\n> 值得注意的地方：\n>\n> - **任何可以书写数据的地方，都可以书写变量**\n>\n> - 若使用一个未声明的变量，会导致报错\n>\n> - **Js中存在变量提升**\n>\n>   所有变量的声明，会自动提到代码的最顶端\n>\n>   这种提升不会超越脚本块\n>\n> - 允许定义多个同名变量（这么做的都是”小可爱“）\n>\n>   多个同名变量最终会提升未一个，后面的覆盖前面的\n\n## 在变量中存放对象\n\n### 通过变量读取对象中的某个属性\n\n```js\n// 变量名.属性名\nuser.naem;\n```\n\n- 当读取的属性不存在时，会得到`undefined`，程序不会报错\n- 当读取属性的对象不存时，程序报错\n\n### 通过变量更改对象中的某个属性\n\n```js\nvar user = {\n\tname: \"yyy\",\n}\nuser.name = 'xxx';\n```\n\n**放赋值的属性不存在时，会添加属性**\n\n### 删除属性\n\n```js\n// delete 变量名.属性名\ndelete user.name;\n```\n\n### 属性表达式\n\n给属性赋值或读取属性时，可以使用下面的格式操作\n\n```js\n// 对象变量[\"属性名\"];\nuser[\"name\"];\n```\n\n以`.`调用的任何情况属性表达式都可以代替，但是`.`调用却做不到一些属性表达式的能做到的事\n\n```js\nuser[\"?\"];\nfunction getUserProp(prop) {\n\treturn user[prop];\n};\n```\n\n**属性的名字只能是字符串，如果写的是数字，则会自动转换为字符串类型的数字**\n\n### 全局对象\n\nJs大部分宿主环境都会提供一个特殊的对象，该对象可以直接在Js代码中访问，该对象叫做全局对象\n\n在浏览器环境中，全局对象为`window`，表示整个窗口\n\n全局对象中的所有属性，可以直接使用，而不需要协商全局对象名（window可以省略）\n\n**开发者定义的变量实际上会成为`window`对象的属性**\n\n**如果变量没有被赋值，则该变量不会覆盖`window`对象上的同名属性**\n","slug":"JS/3.变量","published":1,"updated":"2022-05-22T09:28:00.002Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3h3k4850007zcwcg1p3bqhz","content":"<h1 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h1><h2 id=\"什么是变量？\"><a href=\"#什么是变量？\" class=\"headerlink\" title=\"什么是变量？\"></a>什么是变量？</h2><p>变量是一块内存空间，用于保存数据</p>\n<h2 id=\"使用变量\"><a href=\"#使用变量\" class=\"headerlink\" title=\"使用变量\"></a>使用变量</h2><ol>\n<li>声明（定义）变量</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// var 变量名;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> user;</span><br><span class=\"line\">user = <span class=\"string\">&#x27;xx&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><strong>变量声明后若未赋值则值为<code>undefined</code></strong></p>\n<ol start=\"2\">\n<li>变量的赋值</li>\n</ol>\n<p>向变量的内存空间存放数据</p>\n<ul>\n<li>变量的值是可变的</li>\n</ul>\n<p>变量可以被重新赋值，新的值会覆盖原来的值</p>\n<ul>\n<li>变量的名称</li>\n</ul>\n<p>emmmmmmmmmm….没啥好说的，懂得都懂，就一句话，将变量命名为a、b、c…的都是”小可爱”!😛</p>\n<ul>\n<li>声明和赋值</li>\n</ul>\n<p>可以在声明的时候直接给变量赋值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> user = <span class=\"string\">&#x27;xx&#x27;</span>;  <span class=\"comment\">// 与先声明再赋值没有任何区别，只是一种语法糖，方便书写而已~</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>值得注意的地方：</p>\n<ul>\n<li><p><strong>任何可以书写数据的地方，都可以书写变量</strong></p>\n</li>\n<li><p>若使用一个未声明的变量，会导致报错</p>\n</li>\n<li><p><strong>Js中存在变量提升</strong></p>\n<p>所有变量的声明，会自动提到代码的最顶端</p>\n<p>这种提升不会超越脚本块</p>\n</li>\n<li><p>允许定义多个同名变量（这么做的都是”小可爱“）</p>\n<p>多个同名变量最终会提升未一个，后面的覆盖前面的</p>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"在变量中存放对象\"><a href=\"#在变量中存放对象\" class=\"headerlink\" title=\"在变量中存放对象\"></a>在变量中存放对象</h2><h3 id=\"通过变量读取对象中的某个属性\"><a href=\"#通过变量读取对象中的某个属性\" class=\"headerlink\" title=\"通过变量读取对象中的某个属性\"></a>通过变量读取对象中的某个属性</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 变量名.属性名</span></span><br><span class=\"line\">user.<span class=\"property\">naem</span>;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>当读取的属性不存在时，会得到<code>undefined</code>，程序不会报错</li>\n<li>当读取属性的对象不存时，程序报错</li>\n</ul>\n<h3 id=\"通过变量更改对象中的某个属性\"><a href=\"#通过变量更改对象中的某个属性\" class=\"headerlink\" title=\"通过变量更改对象中的某个属性\"></a>通过变量更改对象中的某个属性</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> user = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">name</span>: <span class=\"string\">&quot;yyy&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">user.<span class=\"property\">name</span> = <span class=\"string\">&#x27;xxx&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><strong>放赋值的属性不存在时，会添加属性</strong></p>\n<h3 id=\"删除属性\"><a href=\"#删除属性\" class=\"headerlink\" title=\"删除属性\"></a>删除属性</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// delete 变量名.属性名</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> user.<span class=\"property\">name</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"属性表达式\"><a href=\"#属性表达式\" class=\"headerlink\" title=\"属性表达式\"></a>属性表达式</h3><p>给属性赋值或读取属性时，可以使用下面的格式操作</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 对象变量[&quot;属性名&quot;];</span></span><br><span class=\"line\">user[<span class=\"string\">&quot;name&quot;</span>];</span><br></pre></td></tr></table></figure>\n\n<p>以<code>.</code>调用的任何情况属性表达式都可以代替，但是<code>.</code>调用却做不到一些属性表达式的能做到的事</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user[<span class=\"string\">&quot;?&quot;</span>];</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getUserProp</span>(<span class=\"params\">prop</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> user[prop];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>属性的名字只能是字符串，如果写的是数字，则会自动转换为字符串类型的数字</strong></p>\n<h3 id=\"全局对象\"><a href=\"#全局对象\" class=\"headerlink\" title=\"全局对象\"></a>全局对象</h3><p>Js大部分宿主环境都会提供一个特殊的对象，该对象可以直接在Js代码中访问，该对象叫做全局对象</p>\n<p>在浏览器环境中，全局对象为<code>window</code>，表示整个窗口</p>\n<p>全局对象中的所有属性，可以直接使用，而不需要协商全局对象名（window可以省略）</p>\n<p><strong>开发者定义的变量实际上会成为<code>window</code>对象的属性</strong></p>\n<p><strong>如果变量没有被赋值，则该变量不会覆盖<code>window</code>对象上的同名属性</strong></p>\n","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-0j1xm0.jpg","excerpt":"","more":"<h1 id=\"变量\"><a href=\"#变量\" class=\"headerlink\" title=\"变量\"></a>变量</h1><h2 id=\"什么是变量？\"><a href=\"#什么是变量？\" class=\"headerlink\" title=\"什么是变量？\"></a>什么是变量？</h2><p>变量是一块内存空间，用于保存数据</p>\n<h2 id=\"使用变量\"><a href=\"#使用变量\" class=\"headerlink\" title=\"使用变量\"></a>使用变量</h2><ol>\n<li>声明（定义）变量</li>\n</ol>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// var 变量名;</span></span><br><span class=\"line\"><span class=\"keyword\">var</span> user;</span><br><span class=\"line\">user = <span class=\"string\">&#x27;xx&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><strong>变量声明后若未赋值则值为<code>undefined</code></strong></p>\n<ol start=\"2\">\n<li>变量的赋值</li>\n</ol>\n<p>向变量的内存空间存放数据</p>\n<ul>\n<li>变量的值是可变的</li>\n</ul>\n<p>变量可以被重新赋值，新的值会覆盖原来的值</p>\n<ul>\n<li>变量的名称</li>\n</ul>\n<p>emmmmmmmmmm….没啥好说的，懂得都懂，就一句话，将变量命名为a、b、c…的都是”小可爱”!😛</p>\n<ul>\n<li>声明和赋值</li>\n</ul>\n<p>可以在声明的时候直接给变量赋值</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> user = <span class=\"string\">&#x27;xx&#x27;</span>;  <span class=\"comment\">// 与先声明再赋值没有任何区别，只是一种语法糖，方便书写而已~</span></span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>值得注意的地方：</p>\n<ul>\n<li><p><strong>任何可以书写数据的地方，都可以书写变量</strong></p>\n</li>\n<li><p>若使用一个未声明的变量，会导致报错</p>\n</li>\n<li><p><strong>Js中存在变量提升</strong></p>\n<p>所有变量的声明，会自动提到代码的最顶端</p>\n<p>这种提升不会超越脚本块</p>\n</li>\n<li><p>允许定义多个同名变量（这么做的都是”小可爱“）</p>\n<p>多个同名变量最终会提升未一个，后面的覆盖前面的</p>\n</li>\n</ul>\n</blockquote>\n<h2 id=\"在变量中存放对象\"><a href=\"#在变量中存放对象\" class=\"headerlink\" title=\"在变量中存放对象\"></a>在变量中存放对象</h2><h3 id=\"通过变量读取对象中的某个属性\"><a href=\"#通过变量读取对象中的某个属性\" class=\"headerlink\" title=\"通过变量读取对象中的某个属性\"></a>通过变量读取对象中的某个属性</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 变量名.属性名</span></span><br><span class=\"line\">user.<span class=\"property\">naem</span>;</span><br></pre></td></tr></table></figure>\n\n<ul>\n<li>当读取的属性不存在时，会得到<code>undefined</code>，程序不会报错</li>\n<li>当读取属性的对象不存时，程序报错</li>\n</ul>\n<h3 id=\"通过变量更改对象中的某个属性\"><a href=\"#通过变量更改对象中的某个属性\" class=\"headerlink\" title=\"通过变量更改对象中的某个属性\"></a>通过变量更改对象中的某个属性</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">var</span> user = &#123;</span><br><span class=\"line\">\t<span class=\"attr\">name</span>: <span class=\"string\">&quot;yyy&quot;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">user.<span class=\"property\">name</span> = <span class=\"string\">&#x27;xxx&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><strong>放赋值的属性不存在时，会添加属性</strong></p>\n<h3 id=\"删除属性\"><a href=\"#删除属性\" class=\"headerlink\" title=\"删除属性\"></a>删除属性</h3><figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// delete 变量名.属性名</span></span><br><span class=\"line\"><span class=\"keyword\">delete</span> user.<span class=\"property\">name</span>;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"属性表达式\"><a href=\"#属性表达式\" class=\"headerlink\" title=\"属性表达式\"></a>属性表达式</h3><p>给属性赋值或读取属性时，可以使用下面的格式操作</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// 对象变量[&quot;属性名&quot;];</span></span><br><span class=\"line\">user[<span class=\"string\">&quot;name&quot;</span>];</span><br></pre></td></tr></table></figure>\n\n<p>以<code>.</code>调用的任何情况属性表达式都可以代替，但是<code>.</code>调用却做不到一些属性表达式的能做到的事</p>\n<figure class=\"highlight js\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">user[<span class=\"string\">&quot;?&quot;</span>];</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">getUserProp</span>(<span class=\"params\">prop</span>) &#123;</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> user[prop];</span><br><span class=\"line\">&#125;;</span><br></pre></td></tr></table></figure>\n\n<p><strong>属性的名字只能是字符串，如果写的是数字，则会自动转换为字符串类型的数字</strong></p>\n<h3 id=\"全局对象\"><a href=\"#全局对象\" class=\"headerlink\" title=\"全局对象\"></a>全局对象</h3><p>Js大部分宿主环境都会提供一个特殊的对象，该对象可以直接在Js代码中访问，该对象叫做全局对象</p>\n<p>在浏览器环境中，全局对象为<code>window</code>，表示整个窗口</p>\n<p>全局对象中的所有属性，可以直接使用，而不需要协商全局对象名（window可以省略）</p>\n<p><strong>开发者定义的变量实际上会成为<code>window</code>对象的属性</strong></p>\n<p><strong>如果变量没有被赋值，则该变量不会覆盖<code>window</code>对象上的同名属性</strong></p>\n"},{"title":"饥荒种植巨大作物四季作物配比","date":"2022-05-07T09:16:08.000Z","cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/v2-4e49c42888f67e228bd69dd879b4c69b_720w.jpg","_content":"# 饥荒种植巨大作物四季作物配比\n\n![饥荒种植巨大作物四季作物配比](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/饥荒种植巨大作物四季作物配比.webp)\n\n种地使我快乐，嘿嘿嘿~","source":"_posts/Game/饥荒种植巨大作物四季搭配表.md","raw":"---\ntitle: 饥荒种植巨大作物四季作物配比\ndate: 2022-05-07 17:16:08\ncover: https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/v2-4e49c42888f67e228bd69dd879b4c69b_720w.jpg\ntags: \n  - Game\n  - 饥荒\ncategories:\n  - Game\n  - 饥荒\n---\n# 饥荒种植巨大作物四季作物配比\n\n![饥荒种植巨大作物四季作物配比](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/饥荒种植巨大作物四季作物配比.webp)\n\n种地使我快乐，嘿嘿嘿~","slug":"Game/饥荒种植巨大作物四季搭配表","published":1,"updated":"2022-05-16T01:06:25.576Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3h3k4870009zcwcciks4pdm","content":"<h1 id=\"饥荒种植巨大作物四季作物配比\"><a href=\"#饥荒种植巨大作物四季作物配比\" class=\"headerlink\" title=\"饥荒种植巨大作物四季作物配比\"></a>饥荒种植巨大作物四季作物配比</h1><p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/%E9%A5%A5%E8%8D%92%E7%A7%8D%E6%A4%8D%E5%B7%A8%E5%A4%A7%E4%BD%9C%E7%89%A9%E5%9B%9B%E5%AD%A3%E4%BD%9C%E7%89%A9%E9%85%8D%E6%AF%94.webp\" alt=\"饥荒种植巨大作物四季作物配比\"></p>\n<p>种地使我快乐，嘿嘿嘿~</p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"饥荒种植巨大作物四季作物配比\"><a href=\"#饥荒种植巨大作物四季作物配比\" class=\"headerlink\" title=\"饥荒种植巨大作物四季作物配比\"></a>饥荒种植巨大作物四季作物配比</h1><p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/%E9%A5%A5%E8%8D%92%E7%A7%8D%E6%A4%8D%E5%B7%A8%E5%A4%A7%E4%BD%9C%E7%89%A9%E5%9B%9B%E5%AD%A3%E4%BD%9C%E7%89%A9%E9%85%8D%E6%AF%94.webp\" alt=\"饥荒种植巨大作物四季作物配比\"></p>\n<p>种地使我快乐，嘿嘿嘿~</p>\n"},{"title":"TypeScript介绍","date":"2022-05-07T12:19:28.000Z","_content":"\n# TypeScript介绍\n\n`TypeScript`是`JavaScript`的超集，是一个可选的、静态的**类型系统**（对代码中所有的表示福【变量、函数、参数、返回值】进行类型检查）。\n\n## TypeScript的特点💪\n\n- 可选的\n\n  顾名思义，爱用不用😛\n\n- 静态的\n\n  无论是`node`环境还是浏览器环境，都无法直接识别`TS`代码（需要使用`tsc`进行转换）\n\n  `TS`代码 ---> `tsc`转换 ---> `JS`代码\n\n  静态既类型检查发生在转换过程中，所以`TS`不参与代码的运行\n\n## TypeScript的安装💠\n\n```\nyarn global add typescript\n```\n","source":"_posts/TS/TypeScript介绍.md","raw":"---\ntitle: TypeScript介绍\ndate: 2022-05-07 20:19:28\ntags: TypeScript\ncategories:\n  - 前端\n  - TypeScript\n---\n\n# TypeScript介绍\n\n`TypeScript`是`JavaScript`的超集，是一个可选的、静态的**类型系统**（对代码中所有的表示福【变量、函数、参数、返回值】进行类型检查）。\n\n## TypeScript的特点💪\n\n- 可选的\n\n  顾名思义，爱用不用😛\n\n- 静态的\n\n  无论是`node`环境还是浏览器环境，都无法直接识别`TS`代码（需要使用`tsc`进行转换）\n\n  `TS`代码 ---> `tsc`转换 ---> `JS`代码\n\n  静态既类型检查发生在转换过程中，所以`TS`不参与代码的运行\n\n## TypeScript的安装💠\n\n```\nyarn global add typescript\n```\n","slug":"TS/TypeScript介绍","published":1,"updated":"2022-05-07T12:27:43.939Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3h3k489000bzcwc2yf7cyjd","content":"<h1 id=\"TypeScript介绍\"><a href=\"#TypeScript介绍\" class=\"headerlink\" title=\"TypeScript介绍\"></a>TypeScript介绍</h1><p><code>TypeScript</code>是<code>JavaScript</code>的超集，是一个可选的、静态的<strong>类型系统</strong>（对代码中所有的表示福【变量、函数、参数、返回值】进行类型检查）。</p>\n<h2 id=\"TypeScript的特点💪\"><a href=\"#TypeScript的特点💪\" class=\"headerlink\" title=\"TypeScript的特点💪\"></a>TypeScript的特点💪</h2><ul>\n<li><p>可选的</p>\n<p>顾名思义，爱用不用😛</p>\n</li>\n<li><p>静态的</p>\n<p>无论是<code>node</code>环境还是浏览器环境，都无法直接识别<code>TS</code>代码（需要使用<code>tsc</code>进行转换）</p>\n<p><code>TS</code>代码 —&gt; <code>tsc</code>转换 —&gt; <code>JS</code>代码</p>\n<p>静态既类型检查发生在转换过程中，所以<code>TS</code>不参与代码的运行</p>\n</li>\n</ul>\n<h2 id=\"TypeScript的安装💠\"><a href=\"#TypeScript的安装💠\" class=\"headerlink\" title=\"TypeScript的安装💠\"></a>TypeScript的安装💠</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn global add typescript</span><br></pre></td></tr></table></figure>\n","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-0prgo3.jpg","excerpt":"","more":"<h1 id=\"TypeScript介绍\"><a href=\"#TypeScript介绍\" class=\"headerlink\" title=\"TypeScript介绍\"></a>TypeScript介绍</h1><p><code>TypeScript</code>是<code>JavaScript</code>的超集，是一个可选的、静态的<strong>类型系统</strong>（对代码中所有的表示福【变量、函数、参数、返回值】进行类型检查）。</p>\n<h2 id=\"TypeScript的特点💪\"><a href=\"#TypeScript的特点💪\" class=\"headerlink\" title=\"TypeScript的特点💪\"></a>TypeScript的特点💪</h2><ul>\n<li><p>可选的</p>\n<p>顾名思义，爱用不用😛</p>\n</li>\n<li><p>静态的</p>\n<p>无论是<code>node</code>环境还是浏览器环境，都无法直接识别<code>TS</code>代码（需要使用<code>tsc</code>进行转换）</p>\n<p><code>TS</code>代码 —&gt; <code>tsc</code>转换 —&gt; <code>JS</code>代码</p>\n<p>静态既类型检查发生在转换过程中，所以<code>TS</code>不参与代码的运行</p>\n</li>\n</ul>\n<h2 id=\"TypeScript的安装💠\"><a href=\"#TypeScript的安装💠\" class=\"headerlink\" title=\"TypeScript的安装💠\"></a>TypeScript的安装💠</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn global add typescript</span><br></pre></td></tr></table></figure>\n"},{"title":"TypeScript配置文件","date":"2022-05-07T12:31:41.000Z","_content":"\n# TypeScript配置文件⚙\n\n默认情况下，`TS`会做出以下假设\n\n- 假设当前执行的环境是`dom`\n- 如果代码中没有会用模块化语句（`import`、`export`），便认为该代码是全局执行\n- 编译的目标代码时`ES3`\n\n有两种方法可以更改以上假设:\n\n1. 使用`tsc`命令执行的时候，加上选项参数\n2. 使用`ts`配置文件，更改编译选项（推荐使用）\n\n`Ts`的配置文件为`tsconfig.json`，可直接创建，也可使用命令`tsc --init`创建\n\n```json\n{\n\t\"compilerOptions\": { // 编译选项\n        \"target\": \"es2016\",  // 编译目标代码的版本标准\n        \"module\": \"commonjs\", // 编译目标使用的模块化标准\n        \"lib\": ['es2016'], // 编译目标当前的环境/全局可使用的变量\n        \"outDir\": \"./dist\", // 输出目录\n        \"strictNullChecks\": true, // 不可将undefined和null赋值\n        \"removeComments\": true, // 表示编译的结果中移除注释\n        \"stricPropertyInitialization\": true, // 以更加严格的方式来检查值得初始化\n    },\n    \"include\": [\"./src\"], // 编译路径\n    \"files\": [\"./src/index.ts\"], // 编译单个文件及其依赖文件\n}\n```\n\n注意🔥:\n\n 1. 使用`TS`配置文件后，在使用`tsc`命令编译时，后面不能跟文件名，若跟了会忽略配置文件\n\n 2. `TS`默认没有`node`环境，所以需要安装`@types/node`，`@types`是一个官方的类型吗描述库，，其中包含了很多对`js`代码的类型描述\n\n    举个栗子🌰:\n\n    `JQuery`使用`JS`写的，但是`TS`默认没有对他的类型检查\n\n    安装`@types/jquery`为`jquery`库添加类型定义\n","source":"_posts/TS/TypeScript配置文件.md","raw":"---\ntitle: TypeScript配置文件\ndate: 2022-05-07 20:31:41\ntags: TypeScript\ncategories:\n  - 前端\n  - TypeScript\n---\n\n# TypeScript配置文件⚙\n\n默认情况下，`TS`会做出以下假设\n\n- 假设当前执行的环境是`dom`\n- 如果代码中没有会用模块化语句（`import`、`export`），便认为该代码是全局执行\n- 编译的目标代码时`ES3`\n\n有两种方法可以更改以上假设:\n\n1. 使用`tsc`命令执行的时候，加上选项参数\n2. 使用`ts`配置文件，更改编译选项（推荐使用）\n\n`Ts`的配置文件为`tsconfig.json`，可直接创建，也可使用命令`tsc --init`创建\n\n```json\n{\n\t\"compilerOptions\": { // 编译选项\n        \"target\": \"es2016\",  // 编译目标代码的版本标准\n        \"module\": \"commonjs\", // 编译目标使用的模块化标准\n        \"lib\": ['es2016'], // 编译目标当前的环境/全局可使用的变量\n        \"outDir\": \"./dist\", // 输出目录\n        \"strictNullChecks\": true, // 不可将undefined和null赋值\n        \"removeComments\": true, // 表示编译的结果中移除注释\n        \"stricPropertyInitialization\": true, // 以更加严格的方式来检查值得初始化\n    },\n    \"include\": [\"./src\"], // 编译路径\n    \"files\": [\"./src/index.ts\"], // 编译单个文件及其依赖文件\n}\n```\n\n注意🔥:\n\n 1. 使用`TS`配置文件后，在使用`tsc`命令编译时，后面不能跟文件名，若跟了会忽略配置文件\n\n 2. `TS`默认没有`node`环境，所以需要安装`@types/node`，`@types`是一个官方的类型吗描述库，，其中包含了很多对`js`代码的类型描述\n\n    举个栗子🌰:\n\n    `JQuery`使用`JS`写的，但是`TS`默认没有对他的类型检查\n\n    安装`@types/jquery`为`jquery`库添加类型定义\n","slug":"TS/TypeScript配置文件","published":1,"updated":"2022-05-07T12:38:42.245Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3h3k48b000fzcwc3nxfe8rt","content":"<h1 id=\"TypeScript配置文件⚙\"><a href=\"#TypeScript配置文件⚙\" class=\"headerlink\" title=\"TypeScript配置文件⚙\"></a>TypeScript配置文件⚙</h1><p>默认情况下，<code>TS</code>会做出以下假设</p>\n<ul>\n<li>假设当前执行的环境是<code>dom</code></li>\n<li>如果代码中没有会用模块化语句（<code>import</code>、<code>export</code>），便认为该代码是全局执行</li>\n<li>编译的目标代码时<code>ES3</code></li>\n</ul>\n<p>有两种方法可以更改以上假设:</p>\n<ol>\n<li>使用<code>tsc</code>命令执行的时候，加上选项参数</li>\n<li>使用<code>ts</code>配置文件，更改编译选项（推荐使用）</li>\n</ol>\n<p><code>Ts</code>的配置文件为<code>tsconfig.json</code>，可直接创建，也可使用命令<code>tsc --init</code>创建</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;compilerOptions&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"comment\">// 编译选项</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;target&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;es2016&quot;</span><span class=\"punctuation\">,</span>  <span class=\"comment\">// 编译目标代码的版本标准</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;module&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;commonjs&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 编译目标使用的模块化标准</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;lib&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>&#x27;es2016&#x27;<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 编译目标当前的环境/全局可使用的变量</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;outDir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./dist&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 输出目录</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;strictNullChecks&quot;</span><span class=\"punctuation\">:</span> <span class=\"keyword\">true</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不可将undefined和null赋值</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;removeComments&quot;</span><span class=\"punctuation\">:</span> <span class=\"keyword\">true</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 表示编译的结果中移除注释</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;stricPropertyInitialization&quot;</span><span class=\"punctuation\">:</span> <span class=\"keyword\">true</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 以更加严格的方式来检查值得初始化</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;include&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;./src&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 编译路径</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;files&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;./src/index.ts&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 编译单个文件及其依赖文件</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>注意🔥:</p>\n<ol>\n<li><p>使用<code>TS</code>配置文件后，在使用<code>tsc</code>命令编译时，后面不能跟文件名，若跟了会忽略配置文件</p>\n</li>\n<li><p><code>TS</code>默认没有<code>node</code>环境，所以需要安装<code>@types/node</code>，<code>@types</code>是一个官方的类型吗描述库，，其中包含了很多对<code>js</code>代码的类型描述</p>\n<p>举个栗子🌰:</p>\n<p><code>JQuery</code>使用<code>JS</code>写的，但是<code>TS</code>默认没有对他的类型检查</p>\n<p>安装<code>@types/jquery</code>为<code>jquery</code>库添加类型定义</p>\n</li>\n</ol>\n","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-3kqv3y.jpg","excerpt":"","more":"<h1 id=\"TypeScript配置文件⚙\"><a href=\"#TypeScript配置文件⚙\" class=\"headerlink\" title=\"TypeScript配置文件⚙\"></a>TypeScript配置文件⚙</h1><p>默认情况下，<code>TS</code>会做出以下假设</p>\n<ul>\n<li>假设当前执行的环境是<code>dom</code></li>\n<li>如果代码中没有会用模块化语句（<code>import</code>、<code>export</code>），便认为该代码是全局执行</li>\n<li>编译的目标代码时<code>ES3</code></li>\n</ul>\n<p>有两种方法可以更改以上假设:</p>\n<ol>\n<li>使用<code>tsc</code>命令执行的时候，加上选项参数</li>\n<li>使用<code>ts</code>配置文件，更改编译选项（推荐使用）</li>\n</ol>\n<p><code>Ts</code>的配置文件为<code>tsconfig.json</code>，可直接创建，也可使用命令<code>tsc --init</code>创建</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;compilerOptions&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span> <span class=\"comment\">// 编译选项</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;target&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;es2016&quot;</span><span class=\"punctuation\">,</span>  <span class=\"comment\">// 编译目标代码的版本标准</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;module&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;commonjs&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 编译目标使用的模块化标准</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;lib&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span>&#x27;es2016&#x27;<span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 编译目标当前的环境/全局可使用的变量</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;outDir&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;./dist&quot;</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 输出目录</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;strictNullChecks&quot;</span><span class=\"punctuation\">:</span> <span class=\"keyword\">true</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 不可将undefined和null赋值</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;removeComments&quot;</span><span class=\"punctuation\">:</span> <span class=\"keyword\">true</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 表示编译的结果中移除注释</span></span><br><span class=\"line\">        <span class=\"attr\">&quot;stricPropertyInitialization&quot;</span><span class=\"punctuation\">:</span> <span class=\"keyword\">true</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 以更加严格的方式来检查值得初始化</span></span><br><span class=\"line\">    <span class=\"punctuation\">&#125;</span><span class=\"punctuation\">,</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;include&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;./src&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 编译路径</span></span><br><span class=\"line\">    <span class=\"attr\">&quot;files&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">[</span><span class=\"string\">&quot;./src/index.ts&quot;</span><span class=\"punctuation\">]</span><span class=\"punctuation\">,</span> <span class=\"comment\">// 编译单个文件及其依赖文件</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>注意🔥:</p>\n<ol>\n<li><p>使用<code>TS</code>配置文件后，在使用<code>tsc</code>命令编译时，后面不能跟文件名，若跟了会忽略配置文件</p>\n</li>\n<li><p><code>TS</code>默认没有<code>node</code>环境，所以需要安装<code>@types/node</code>，<code>@types</code>是一个官方的类型吗描述库，，其中包含了很多对<code>js</code>代码的类型描述</p>\n<p>举个栗子🌰:</p>\n<p><code>JQuery</code>使用<code>JS</code>写的，但是<code>TS</code>默认没有对他的类型检查</p>\n<p>安装<code>@types/jquery</code>为<code>jquery</code>库添加类型定义</p>\n</li>\n</ol>\n"},{"title":"使用第三方库简化流程","date":"2022-05-15T09:12:17.000Z","_content":"\n# 使用第三方库简化流程🎈\n\n## ts-node\n\n将`TS`在内存中完成编译，同时完成运行（不会生成编译文件）\n\n### 安装\n\n```\nnpm i -g ts-node\n```\n\n### 使用\n\n```\nts-node src/index.ts\n```\n\n## nodemon\n\n监测文件变化，自动运行\n\n### 安装\n\n```\nnpm i -D nodemon\n```\n\n### 使用\n\n```\nnodemon --exec ts-node src/index.ts\n```\n\n在`package.json`中配置\n\n```json\n\"scripts\": {\n\t\"server\": \"nodemon --watch src -e ts --exec ts-node src/index.ts\"\n    // --watch src 表示只监测src下面的文件\n    // -e ts 表示只监控扩展名为ts的文件\n}\n```\n\n建议流程👍：\n\n开发时：`nodemon`和`ts-node`同时使用\n\n打包时：`tsc`\n\n","source":"_posts/TS/使用第三方库简化流程.md","raw":"---\ntitle: 使用第三方库简化流程\ndate: 2022-05-15 17:12:17\ntags: TypeScript\ncategories:\n  - 前端\n  - TypeScript\n---\n\n# 使用第三方库简化流程🎈\n\n## ts-node\n\n将`TS`在内存中完成编译，同时完成运行（不会生成编译文件）\n\n### 安装\n\n```\nnpm i -g ts-node\n```\n\n### 使用\n\n```\nts-node src/index.ts\n```\n\n## nodemon\n\n监测文件变化，自动运行\n\n### 安装\n\n```\nnpm i -D nodemon\n```\n\n### 使用\n\n```\nnodemon --exec ts-node src/index.ts\n```\n\n在`package.json`中配置\n\n```json\n\"scripts\": {\n\t\"server\": \"nodemon --watch src -e ts --exec ts-node src/index.ts\"\n    // --watch src 表示只监测src下面的文件\n    // -e ts 表示只监控扩展名为ts的文件\n}\n```\n\n建议流程👍：\n\n开发时：`nodemon`和`ts-node`同时使用\n\n打包时：`tsc`\n\n","slug":"TS/使用第三方库简化流程","published":1,"updated":"2022-05-15T09:34:06.554Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3h3k48c000gzcwch60pd8hx","content":"<h1 id=\"使用第三方库简化流程🎈\"><a href=\"#使用第三方库简化流程🎈\" class=\"headerlink\" title=\"使用第三方库简化流程🎈\"></a>使用第三方库简化流程🎈</h1><h2 id=\"ts-node\"><a href=\"#ts-node\" class=\"headerlink\" title=\"ts-node\"></a>ts-node</h2><p>将<code>TS</code>在内存中完成编译，同时完成运行（不会生成编译文件）</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -g ts-node</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ts-node src/index.ts</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nodemon\"><a href=\"#nodemon\" class=\"headerlink\" title=\"nodemon\"></a>nodemon</h2><p>监测文件变化，自动运行</p>\n<h3 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D nodemon</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-1\"><a href=\"#使用-1\" class=\"headerlink\" title=\"使用\"></a>使用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nodemon --exec ts-node src/index.ts</span><br></pre></td></tr></table></figure>\n\n<p>在<code>package.json</code>中配置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;server&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;nodemon --watch src -e ts --exec ts-node src/index.ts&quot;</span></span><br><span class=\"line\">    <span class=\"comment\">// --watch src 表示只监测src下面的文件</span></span><br><span class=\"line\">    <span class=\"comment\">// -e ts 表示只监控扩展名为ts的文件</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>建议流程👍：</p>\n<p>开发时：<code>nodemon</code>和<code>ts-node</code>同时使用</p>\n<p>打包时：<code>tsc</code></p>\n","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-49q5dk.jpg","excerpt":"","more":"<h1 id=\"使用第三方库简化流程🎈\"><a href=\"#使用第三方库简化流程🎈\" class=\"headerlink\" title=\"使用第三方库简化流程🎈\"></a>使用第三方库简化流程🎈</h1><h2 id=\"ts-node\"><a href=\"#ts-node\" class=\"headerlink\" title=\"ts-node\"></a>ts-node</h2><p>将<code>TS</code>在内存中完成编译，同时完成运行（不会生成编译文件）</p>\n<h3 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -g ts-node</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用\"><a href=\"#使用\" class=\"headerlink\" title=\"使用\"></a>使用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ts-node src/index.ts</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"nodemon\"><a href=\"#nodemon\" class=\"headerlink\" title=\"nodemon\"></a>nodemon</h2><p>监测文件变化，自动运行</p>\n<h3 id=\"安装-1\"><a href=\"#安装-1\" class=\"headerlink\" title=\"安装\"></a>安装</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">npm i -D nodemon</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"使用-1\"><a href=\"#使用-1\" class=\"headerlink\" title=\"使用\"></a>使用</h3><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">nodemon --exec ts-node src/index.ts</span><br></pre></td></tr></table></figure>\n\n<p>在<code>package.json</code>中配置</p>\n<figure class=\"highlight json\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"attr\">&quot;scripts&quot;</span><span class=\"punctuation\">:</span> <span class=\"punctuation\">&#123;</span></span><br><span class=\"line\">\t<span class=\"attr\">&quot;server&quot;</span><span class=\"punctuation\">:</span> <span class=\"string\">&quot;nodemon --watch src -e ts --exec ts-node src/index.ts&quot;</span></span><br><span class=\"line\">    <span class=\"comment\">// --watch src 表示只监测src下面的文件</span></span><br><span class=\"line\">    <span class=\"comment\">// -e ts 表示只监控扩展名为ts的文件</span></span><br><span class=\"line\"><span class=\"punctuation\">&#125;</span></span><br></pre></td></tr></table></figure>\n\n<p>建议流程👍：</p>\n<p>开发时：<code>nodemon</code>和<code>ts-node</code>同时使用</p>\n<p>打包时：<code>tsc</code></p>\n"},{"title":"typora使用图床","date":"2022-05-04T13:44:10.000Z","_content":"# 在`typora`中使用图床\n\n## 图床是什么？\n\n图床是在互联网中存储图片的空间，其实就是云存储图片🐶\n\n## 为什么要使用图床？\n\n1. 减轻服务器的压力\n\n2. 便于文件的迁移\n\n   举个例子🌰\n\n   ![image-20220504220205797](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504220205797.png)\n\n   这个狗狗🐕在我的电脑是可以正常显示的，但是当我换一台电脑呢？显而易见，肯定是加载不出来的。\n\n   这就有了图床的用武之地，如果我们用图床，这个问题就会迎刃而解。（如下图）\n\n   ![image-20220504220606770](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504220606770.png)\n\n## 图床的获取\n\n目前国内有很多图床，如`smms`、`腾讯云COS`、`GitHub图床`、`七牛图床`、`阿里云图床`等。有收费的，也有免费的。\n\n我使用了`腾讯云COS`,它免费赠送了`50G`的空间，马哥这点还是挺良心的，嘿嘿。\n\n以下为腾讯云的例子\n\n![image-20220504221315971](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221315971.png)\n\n![image-20220504221508711](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221508711.png)\n\n![image-20220504221532851](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221532851.png)\n\n![image-20220504221737782](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221737782.png)\n\n![image-20220504221823359](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221823359.png)\n\n![image-20220504221843163](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221843163.png)\n\n## 在typroa中使用图床\n\n1. 首先我们要下载`Picgo`，并对其进行配置\n\n![image-20220504222436647](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504222436647.png)\n\n> - 版本需要为v5\n>\n> - `SecretId`和`SecretKey`可以在`https://console.cloud.tencent.com/cam/capi`查看（第一次进入是没有的，可以自行创建）。\n\n要想上传成功，`PicGo`的端口必须和`Typora`的一致\n\n![image-20220504222743593](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504222743593.png)\n\n2. 配置`Typora`\n\n   ![image-20220504223256805](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504223256805.png)\n\n出现以下情况即为上传成功~\n\n![image-20220504223329966](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504223329966.png)\n\n在`Typora`插入图片后，右键 ---> 上传图片  --->  链接自动替换为图床路径\n\n造就完了，兄弟~","source":"_posts/Life/typora使用图床.md","raw":"---\ntitle: typora使用图床\ndate: 2022-05-04 21:44:10\ntags: typora\n---\n# 在`typora`中使用图床\n\n## 图床是什么？\n\n图床是在互联网中存储图片的空间，其实就是云存储图片🐶\n\n## 为什么要使用图床？\n\n1. 减轻服务器的压力\n\n2. 便于文件的迁移\n\n   举个例子🌰\n\n   ![image-20220504220205797](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504220205797.png)\n\n   这个狗狗🐕在我的电脑是可以正常显示的，但是当我换一台电脑呢？显而易见，肯定是加载不出来的。\n\n   这就有了图床的用武之地，如果我们用图床，这个问题就会迎刃而解。（如下图）\n\n   ![image-20220504220606770](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504220606770.png)\n\n## 图床的获取\n\n目前国内有很多图床，如`smms`、`腾讯云COS`、`GitHub图床`、`七牛图床`、`阿里云图床`等。有收费的，也有免费的。\n\n我使用了`腾讯云COS`,它免费赠送了`50G`的空间，马哥这点还是挺良心的，嘿嘿。\n\n以下为腾讯云的例子\n\n![image-20220504221315971](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221315971.png)\n\n![image-20220504221508711](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221508711.png)\n\n![image-20220504221532851](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221532851.png)\n\n![image-20220504221737782](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221737782.png)\n\n![image-20220504221823359](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221823359.png)\n\n![image-20220504221843163](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221843163.png)\n\n## 在typroa中使用图床\n\n1. 首先我们要下载`Picgo`，并对其进行配置\n\n![image-20220504222436647](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504222436647.png)\n\n> - 版本需要为v5\n>\n> - `SecretId`和`SecretKey`可以在`https://console.cloud.tencent.com/cam/capi`查看（第一次进入是没有的，可以自行创建）。\n\n要想上传成功，`PicGo`的端口必须和`Typora`的一致\n\n![image-20220504222743593](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504222743593.png)\n\n2. 配置`Typora`\n\n   ![image-20220504223256805](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504223256805.png)\n\n出现以下情况即为上传成功~\n\n![image-20220504223329966](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504223329966.png)\n\n在`Typora`插入图片后，右键 ---> 上传图片  --->  链接自动替换为图床路径\n\n造就完了，兄弟~","slug":"Life/typora使用图床","published":1,"updated":"2022-05-04T14:36:20.514Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3h3k48d000lzcwcgomkgmlc","content":"<h1 id=\"在typora中使用图床\"><a href=\"#在typora中使用图床\" class=\"headerlink\" title=\"在typora中使用图床\"></a>在<code>typora</code>中使用图床</h1><h2 id=\"图床是什么？\"><a href=\"#图床是什么？\" class=\"headerlink\" title=\"图床是什么？\"></a>图床是什么？</h2><p>图床是在互联网中存储图片的空间，其实就是云存储图片🐶</p>\n<h2 id=\"为什么要使用图床？\"><a href=\"#为什么要使用图床？\" class=\"headerlink\" title=\"为什么要使用图床？\"></a>为什么要使用图床？</h2><ol>\n<li><p>减轻服务器的压力</p>\n</li>\n<li><p>便于文件的迁移</p>\n<p>举个例子🌰</p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504220205797.png\" alt=\"image-20220504220205797\"></p>\n<p>这个狗狗🐕在我的电脑是可以正常显示的，但是当我换一台电脑呢？显而易见，肯定是加载不出来的。</p>\n<p>这就有了图床的用武之地，如果我们用图床，这个问题就会迎刃而解。（如下图）</p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504220606770.png\" alt=\"image-20220504220606770\"></p>\n</li>\n</ol>\n<h2 id=\"图床的获取\"><a href=\"#图床的获取\" class=\"headerlink\" title=\"图床的获取\"></a>图床的获取</h2><p>目前国内有很多图床，如<code>smms</code>、<code>腾讯云COS</code>、<code>GitHub图床</code>、<code>七牛图床</code>、<code>阿里云图床</code>等。有收费的，也有免费的。</p>\n<p>我使用了<code>腾讯云COS</code>,它免费赠送了<code>50G</code>的空间，马哥这点还是挺良心的，嘿嘿。</p>\n<p>以下为腾讯云的例子</p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221315971.png\" alt=\"image-20220504221315971\"></p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221508711.png\" alt=\"image-20220504221508711\"></p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221532851.png\" alt=\"image-20220504221532851\"></p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221737782.png\" alt=\"image-20220504221737782\"></p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221823359.png\" alt=\"image-20220504221823359\"></p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221843163.png\" alt=\"image-20220504221843163\"></p>\n<h2 id=\"在typroa中使用图床\"><a href=\"#在typroa中使用图床\" class=\"headerlink\" title=\"在typroa中使用图床\"></a>在typroa中使用图床</h2><ol>\n<li>首先我们要下载<code>Picgo</code>，并对其进行配置</li>\n</ol>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504222436647.png\" alt=\"image-20220504222436647\"></p>\n<blockquote>\n<ul>\n<li><p>版本需要为v5</p>\n</li>\n<li><p><code>SecretId</code>和<code>SecretKey</code>可以在<code>https://console.cloud.tencent.com/cam/capi</code>查看（第一次进入是没有的，可以自行创建）。</p>\n</li>\n</ul>\n</blockquote>\n<p>要想上传成功，<code>PicGo</code>的端口必须和<code>Typora</code>的一致</p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504222743593.png\" alt=\"image-20220504222743593\"></p>\n<ol start=\"2\">\n<li><p>配置<code>Typora</code></p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504223256805.png\" alt=\"image-20220504223256805\"></p>\n</li>\n</ol>\n<p>出现以下情况即为上传成功~</p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504223329966.png\" alt=\"image-20220504223329966\"></p>\n<p>在<code>Typora</code>插入图片后，右键 —&gt; 上传图片  —&gt;  链接自动替换为图床路径</p>\n<p>造就完了，兄弟~</p>\n","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-0prgo3.jpg","excerpt":"","more":"<h1 id=\"在typora中使用图床\"><a href=\"#在typora中使用图床\" class=\"headerlink\" title=\"在typora中使用图床\"></a>在<code>typora</code>中使用图床</h1><h2 id=\"图床是什么？\"><a href=\"#图床是什么？\" class=\"headerlink\" title=\"图床是什么？\"></a>图床是什么？</h2><p>图床是在互联网中存储图片的空间，其实就是云存储图片🐶</p>\n<h2 id=\"为什么要使用图床？\"><a href=\"#为什么要使用图床？\" class=\"headerlink\" title=\"为什么要使用图床？\"></a>为什么要使用图床？</h2><ol>\n<li><p>减轻服务器的压力</p>\n</li>\n<li><p>便于文件的迁移</p>\n<p>举个例子🌰</p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504220205797.png\" alt=\"image-20220504220205797\"></p>\n<p>这个狗狗🐕在我的电脑是可以正常显示的，但是当我换一台电脑呢？显而易见，肯定是加载不出来的。</p>\n<p>这就有了图床的用武之地，如果我们用图床，这个问题就会迎刃而解。（如下图）</p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504220606770.png\" alt=\"image-20220504220606770\"></p>\n</li>\n</ol>\n<h2 id=\"图床的获取\"><a href=\"#图床的获取\" class=\"headerlink\" title=\"图床的获取\"></a>图床的获取</h2><p>目前国内有很多图床，如<code>smms</code>、<code>腾讯云COS</code>、<code>GitHub图床</code>、<code>七牛图床</code>、<code>阿里云图床</code>等。有收费的，也有免费的。</p>\n<p>我使用了<code>腾讯云COS</code>,它免费赠送了<code>50G</code>的空间，马哥这点还是挺良心的，嘿嘿。</p>\n<p>以下为腾讯云的例子</p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221315971.png\" alt=\"image-20220504221315971\"></p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221508711.png\" alt=\"image-20220504221508711\"></p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221532851.png\" alt=\"image-20220504221532851\"></p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221737782.png\" alt=\"image-20220504221737782\"></p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221823359.png\" alt=\"image-20220504221823359\"></p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504221843163.png\" alt=\"image-20220504221843163\"></p>\n<h2 id=\"在typroa中使用图床\"><a href=\"#在typroa中使用图床\" class=\"headerlink\" title=\"在typroa中使用图床\"></a>在typroa中使用图床</h2><ol>\n<li>首先我们要下载<code>Picgo</code>，并对其进行配置</li>\n</ol>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504222436647.png\" alt=\"image-20220504222436647\"></p>\n<blockquote>\n<ul>\n<li><p>版本需要为v5</p>\n</li>\n<li><p><code>SecretId</code>和<code>SecretKey</code>可以在<code>https://console.cloud.tencent.com/cam/capi</code>查看（第一次进入是没有的，可以自行创建）。</p>\n</li>\n</ul>\n</blockquote>\n<p>要想上传成功，<code>PicGo</code>的端口必须和<code>Typora</code>的一致</p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504222743593.png\" alt=\"image-20220504222743593\"></p>\n<ol start=\"2\">\n<li><p>配置<code>Typora</code></p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504223256805.png\" alt=\"image-20220504223256805\"></p>\n</li>\n</ol>\n<p>出现以下情况即为上传成功~</p>\n<p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/img/image-20220504223329966.png\" alt=\"image-20220504223329966\"></p>\n<p>在<code>Typora</code>插入图片后，右键 —&gt; 上传图片  —&gt;  链接自动替换为图床路径</p>\n<p>造就完了，兄弟~</p>\n"},{"title":"壁纸","date":"2022-05-06T00:30:22.000Z","_content":"{% gallery %}\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-015er3.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-0j1xm0.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-0prgo3.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-2e7v1g.png)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-2ew3pm.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-3kqv3y.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-45x55n.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-48y7wy.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-49q5dk.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-4l5j3r.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-4ve76m.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-72rxqo.jpg)\n{% endgallery %}","source":"_posts/Life/wallpaper.md","raw":"---\ntitle: 壁纸\ndate: 2022-05-06 08:30:22\ntags: wallpaper\n---\n{% gallery %}\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-015er3.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-0j1xm0.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-0prgo3.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-2e7v1g.png)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-2ew3pm.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-3kqv3y.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-45x55n.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-48y7wy.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-49q5dk.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-4l5j3r.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-4ve76m.jpg)\n![](https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-72rxqo.jpg)\n{% endgallery %}","slug":"Life/wallpaper","published":1,"updated":"2022-05-07T12:12:03.710Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3h3k48e000mzcwcgor82wbm","content":"<div class=\"fj-gallery\"><p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-015er3.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-0j1xm0.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-0prgo3.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-2e7v1g.png\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-2ew3pm.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-3kqv3y.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-45x55n.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-48y7wy.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-49q5dk.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-4l5j3r.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-4ve76m.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-72rxqo.jpg\"></p>\n          </div>","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-015er3.jpg","excerpt":"","more":"<div class=\"fj-gallery\"><p><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-015er3.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-0j1xm0.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-0prgo3.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-2e7v1g.png\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-2ew3pm.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-3kqv3y.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-45x55n.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-48y7wy.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-49q5dk.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-4l5j3r.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-4ve76m.jpg\"><br><img src=\"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-72rxqo.jpg\"></p>\n          </div>"},{"title":"yarn全局安装后命令不起作用","date":"2022-05-15T09:41:52.000Z","_content":"\n# yarn全局安装后命令不起作用\n\n在之前的开发中一直在使用`yarn`来安装各种包，但一直存在`yarn global add xxx` 全局安装后该包的命令无法使用，当时也没在意，直接使用`npm i -g xxx`装一下就能用了😛。知道今天求知欲爆发，决定看看是咋回事儿~😜\n\n经过一番百度之后发现是因为没有给`yarn`配置环境变量😅\n\n## 解决方法\n\n执行\n\n```\nyarn global bin\n// C:\\Users\\userName\\AppData\\Local\\Yarn\\bin\n```\n\n将输出的路径添加到环境变量`path`中\n\n## 扩展\n\n我忽然想到一个问题，如果使用`npm`和`yarn`分别安装了同一个库的不同版本会怎么样~\n\n经过我一番简单的测试，我发现系统会优先使用`yarn`的，不知道是不是我配置了`NODE_PATH`为`yarn`的目录的原因🤣，具体等以后出了问题再深究吧（我太懒了😂）emmmmmm..................\n\n我觉得在安装全局库的时候可以只使用`npm`或只使用`yarn`，可能会避免一些`bug`吧，也方便管理，嘿嘿~\n","source":"_posts/problem/yarn/全局安装后命令不起作用.md","raw":"---\ntitle: yarn全局安装后命令不起作用\ndate: 2022-05-15 17:41:52\ntags:\n - yarn\n - problem\ncategories:\n - problem\n - yarnd\n---\n\n# yarn全局安装后命令不起作用\n\n在之前的开发中一直在使用`yarn`来安装各种包，但一直存在`yarn global add xxx` 全局安装后该包的命令无法使用，当时也没在意，直接使用`npm i -g xxx`装一下就能用了😛。知道今天求知欲爆发，决定看看是咋回事儿~😜\n\n经过一番百度之后发现是因为没有给`yarn`配置环境变量😅\n\n## 解决方法\n\n执行\n\n```\nyarn global bin\n// C:\\Users\\userName\\AppData\\Local\\Yarn\\bin\n```\n\n将输出的路径添加到环境变量`path`中\n\n## 扩展\n\n我忽然想到一个问题，如果使用`npm`和`yarn`分别安装了同一个库的不同版本会怎么样~\n\n经过我一番简单的测试，我发现系统会优先使用`yarn`的，不知道是不是我配置了`NODE_PATH`为`yarn`的目录的原因🤣，具体等以后出了问题再深究吧（我太懒了😂）emmmmmm..................\n\n我觉得在安装全局库的时候可以只使用`npm`或只使用`yarn`，可能会避免一些`bug`吧，也方便管理，嘿嘿~\n","slug":"problem/yarn/全局安装后命令不起作用","published":1,"updated":"2022-05-16T01:11:23.653Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl3h3k48r001kzcwcbe6ecyea","content":"<h1 id=\"yarn全局安装后命令不起作用\"><a href=\"#yarn全局安装后命令不起作用\" class=\"headerlink\" title=\"yarn全局安装后命令不起作用\"></a>yarn全局安装后命令不起作用</h1><p>在之前的开发中一直在使用<code>yarn</code>来安装各种包，但一直存在<code>yarn global add xxx</code> 全局安装后该包的命令无法使用，当时也没在意，直接使用<code>npm i -g xxx</code>装一下就能用了😛。知道今天求知欲爆发，决定看看是咋回事儿~😜</p>\n<p>经过一番百度之后发现是因为没有给<code>yarn</code>配置环境变量😅</p>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><p>执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn global bin</span><br><span class=\"line\">// C:\\Users\\userName\\AppData\\Local\\Yarn\\bin</span><br></pre></td></tr></table></figure>\n\n<p>将输出的路径添加到环境变量<code>path</code>中</p>\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><p>我忽然想到一个问题，如果使用<code>npm</code>和<code>yarn</code>分别安装了同一个库的不同版本会怎么样~</p>\n<p>经过我一番简单的测试，我发现系统会优先使用<code>yarn</code>的，不知道是不是我配置了<code>NODE_PATH</code>为<code>yarn</code>的目录的原因🤣，具体等以后出了问题再深究吧（我太懒了😂）emmmmmm………………</p>\n<p>我觉得在安装全局库的时候可以只使用<code>npm</code>或只使用<code>yarn</code>，可能会避免一些<code>bug</code>吧，也方便管理，嘿嘿~</p>\n","site":{"data":{}},"cover":"https://object-srote-1305109524.cos.ap-beijing.myqcloud.com/wallpaper/wallhaven-72rxqo.jpg","excerpt":"","more":"<h1 id=\"yarn全局安装后命令不起作用\"><a href=\"#yarn全局安装后命令不起作用\" class=\"headerlink\" title=\"yarn全局安装后命令不起作用\"></a>yarn全局安装后命令不起作用</h1><p>在之前的开发中一直在使用<code>yarn</code>来安装各种包，但一直存在<code>yarn global add xxx</code> 全局安装后该包的命令无法使用，当时也没在意，直接使用<code>npm i -g xxx</code>装一下就能用了😛。知道今天求知欲爆发，决定看看是咋回事儿~😜</p>\n<p>经过一番百度之后发现是因为没有给<code>yarn</code>配置环境变量😅</p>\n<h2 id=\"解决方法\"><a href=\"#解决方法\" class=\"headerlink\" title=\"解决方法\"></a>解决方法</h2><p>执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yarn global bin</span><br><span class=\"line\">// C:\\Users\\userName\\AppData\\Local\\Yarn\\bin</span><br></pre></td></tr></table></figure>\n\n<p>将输出的路径添加到环境变量<code>path</code>中</p>\n<h2 id=\"扩展\"><a href=\"#扩展\" class=\"headerlink\" title=\"扩展\"></a>扩展</h2><p>我忽然想到一个问题，如果使用<code>npm</code>和<code>yarn</code>分别安装了同一个库的不同版本会怎么样~</p>\n<p>经过我一番简单的测试，我发现系统会优先使用<code>yarn</code>的，不知道是不是我配置了<code>NODE_PATH</code>为<code>yarn</code>的目录的原因🤣，具体等以后出了问题再深究吧（我太懒了😂）emmmmmm………………</p>\n<p>我觉得在安装全局库的时候可以只使用<code>npm</code>或只使用<code>yarn</code>，可能会避免一些<code>bug</code>吧，也方便管理，嘿嘿~</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cl3h3k47x0001zcwcgqmbatin","category_id":"cl3h3k4830004zcwceb5ma1up","_id":"cl3h3k48c000izcwcgjim89mt"},{"post_id":"cl3h3k4810003zcwc9mze5woc","category_id":"cl3h3k4830004zcwceb5ma1up","_id":"cl3h3k48f000ozcwcflro1h0n"},{"post_id":"cl3h3k4850007zcwcg1p3bqhz","category_id":"cl3h3k4830004zcwceb5ma1up","_id":"cl3h3k48g000rzcwc2aa0ffg2"},{"post_id":"cl3h3k4870009zcwcciks4pdm","category_id":"cl3h3k48f000nzcwc1wto8vmd","_id":"cl3h3k48l0017zcwc953k9sp5"},{"post_id":"cl3h3k4870009zcwcciks4pdm","category_id":"cl3h3k48j0011zcwc0wumafgz","_id":"cl3h3k48l001azcwc05jw4d6t"},{"post_id":"cl3h3k489000bzcwc2yf7cyjd","category_id":"cl3h3k48g000szcwchvl2fen6","_id":"cl3h3k48m001dzcwch0n81r25"},{"post_id":"cl3h3k489000bzcwc2yf7cyjd","category_id":"cl3h3k48k0014zcwcbmsy1mzo","_id":"cl3h3k48m001ezcwcgsk141x4"},{"post_id":"cl3h3k48b000fzcwc3nxfe8rt","category_id":"cl3h3k48g000szcwchvl2fen6","_id":"cl3h3k48m001gzcwcglv27zms"},{"post_id":"cl3h3k48b000fzcwc3nxfe8rt","category_id":"cl3h3k48k0014zcwcbmsy1mzo","_id":"cl3h3k48m001hzcwcbxwnasqs"},{"post_id":"cl3h3k48c000gzcwch60pd8hx","category_id":"cl3h3k48g000szcwchvl2fen6","_id":"cl3h3k48m001izcwc3k9u35k5"},{"post_id":"cl3h3k48c000gzcwch60pd8hx","category_id":"cl3h3k48k0014zcwcbmsy1mzo","_id":"cl3h3k48m001jzcwc6rao8go8"},{"post_id":"cl3h3k48r001kzcwcbe6ecyea","category_id":"cl3h3k48s001lzcwc6ieherag","_id":"cl3h3k48t001rzcwcag7i2qqr"},{"post_id":"cl3h3k48r001kzcwcbe6ecyea","category_id":"cl3h3k48s001ozcwc31v96njr","_id":"cl3h3k48t001szcwcdyf1537v"}],"PostTag":[{"post_id":"cl3h3k47x0001zcwcgqmbatin","tag_id":"cl3h3k4840005zcwc8p400n58","_id":"cl3h3k48b000ezcwc9cfj5h6p"},{"post_id":"cl3h3k4810003zcwc9mze5woc","tag_id":"cl3h3k4840005zcwc8p400n58","_id":"cl3h3k48d000kzcwcecdx81rr"},{"post_id":"cl3h3k4850007zcwcg1p3bqhz","tag_id":"cl3h3k4840005zcwc8p400n58","_id":"cl3h3k48g000qzcwc78zt1yuc"},{"post_id":"cl3h3k4870009zcwcciks4pdm","tag_id":"cl3h3k48f000pzcwc75ex0v7k","_id":"cl3h3k48i000wzcwc8hvy02fv"},{"post_id":"cl3h3k4870009zcwcciks4pdm","tag_id":"cl3h3k48g000tzcwce7qa2976","_id":"cl3h3k48i000xzcwcf1mkcp65"},{"post_id":"cl3h3k489000bzcwc2yf7cyjd","tag_id":"cl3h3k48h000vzcwcannoe9k2","_id":"cl3h3k48j0010zcwc4s6d2hnt"},{"post_id":"cl3h3k48b000fzcwc3nxfe8rt","tag_id":"cl3h3k48h000vzcwcannoe9k2","_id":"cl3h3k48k0013zcwch27c6c4t"},{"post_id":"cl3h3k48c000gzcwch60pd8hx","tag_id":"cl3h3k48h000vzcwcannoe9k2","_id":"cl3h3k48k0016zcwcah3qauph"},{"post_id":"cl3h3k48d000lzcwcgomkgmlc","tag_id":"cl3h3k48k0015zcwcdg9k9yg0","_id":"cl3h3k48l001bzcwc33rt7oj4"},{"post_id":"cl3h3k48e000mzcwcgor82wbm","tag_id":"cl3h3k48l0019zcwc4tou1sho","_id":"cl3h3k48m001fzcwcecsw897j"},{"post_id":"cl3h3k48r001kzcwcbe6ecyea","tag_id":"cl3h3k48s001mzcwc9qs82ogl","_id":"cl3h3k48t001pzcwc6i7v7eb4"},{"post_id":"cl3h3k48r001kzcwcbe6ecyea","tag_id":"cl3h3k48s001nzcwc07mmast8","_id":"cl3h3k48t001qzcwc70mq1mca"}],"Tag":[{"name":"JavaScript","_id":"cl3h3k4840005zcwc8p400n58"},{"name":"Game","_id":"cl3h3k48f000pzcwc75ex0v7k"},{"name":"饥荒","_id":"cl3h3k48g000tzcwce7qa2976"},{"name":"TypeScript","_id":"cl3h3k48h000vzcwcannoe9k2"},{"name":"typora","_id":"cl3h3k48k0015zcwcdg9k9yg0"},{"name":"wallpaper","_id":"cl3h3k48l0019zcwc4tou1sho"},{"name":"yarn","_id":"cl3h3k48s001mzcwc9qs82ogl"},{"name":"problem","_id":"cl3h3k48s001nzcwc07mmast8"}]}}